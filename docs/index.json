{
  "api/index.html": {
    "href": "api/index.html",
    "title": "API Documentation | DocFX Material",
    "keywords": "API Documentation"
  },
  "api/p1eXu5.Result.Exceptions.html": {
    "href": "api/p1eXu5.Result.Exceptions.html",
    "title": "Namespace p1eXu5.Result.Exceptions | DocFX Material",
    "keywords": "Namespace p1eXu5.Result.Exceptions Classes ResultContextAccessException"
  },
  "api/p1eXu5.Result.Exceptions.ResultContextAccessException.html": {
    "href": "api/p1eXu5.Result.Exceptions.ResultContextAccessException.html",
    "title": "Class ResultContextAccessException | DocFX Material",
    "keywords": "Class ResultContextAccessException Inheritance System.Object ResultContextAccessException Namespace : p1eXu5.Result.Exceptions Assembly : p1eXu5.Result.dll Syntax public class ResultContextAccessException : InvalidOperationException Constructors | Improve this Doc View Source ResultContextAccessException(String) Declaration public ResultContextAccessException(string error) Parameters Type Name Description System.String error Extension Methods ResultExtensions.ToOk<TOk, TError>(TOk) ResultExtensions.ToOk<TOk>(TOk) ResultExtensions.ToOkWithStringError<TOk>(TOk) ResultExtensions.ToError<TOk, TError>(TError) TaskResultExtensions.Retn<TOk, TError>(TOk)"
  },
  "api/p1eXu5.Result.Extensions.html": {
    "href": "api/p1eXu5.Result.Extensions.html",
    "title": "Namespace p1eXu5.Result.Extensions | DocFX Material",
    "keywords": "Namespace p1eXu5.Result.Extensions Classes ResultExtensions Result<TOk, TError> extensions. TaskExtensions Extension methods for converting 's and 's to 's and 's with Result objects. TaskResultExtensions TaskResult extensions."
  },
  "api/p1eXu5.Result.Extensions.ResultExtensions.html": {
    "href": "api/p1eXu5.Result.Extensions.ResultExtensions.html",
    "title": "Class ResultExtensions | DocFX Material",
    "keywords": "Class ResultExtensions Result<TOk, TError> extensions. Inheritance System.Object ResultExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : p1eXu5.Result.Extensions Assembly : p1eXu5.Result.dll Syntax public static class ResultExtensions Methods | Improve this Doc View Source Bimap<TOkA, TOkB, TErrorA, TErrorB>(Result<TOkA, TErrorA>, Func<TOkA, TOkB>, Func<TErrorA, TErrorB>) Declaration public static Result<TOkB, TErrorB> Bimap<TOkA, TOkB, TErrorA, TErrorB>(this Result<TOkA, TErrorA> result, Func<TOkA, TOkB> fOk, Func<TErrorA, TErrorB> fErr) Parameters Type Name Description Result <TOkA, TErrorA> result Func <TOkA, TOkB> fOk Func <TErrorA, TErrorB> fErr Returns Type Description Result <TOkB, TErrorB> Type Parameters Name Description TOkA TOkB TErrorA TErrorB | Improve this Doc View Source Bind<TOkA, TOkB, TError>(Result<TOkA, TError>, Func<TOkA, Result<TOkB, TError>>) Declaration public static Result<TOkB, TError> Bind<TOkA, TOkB, TError>(this Result<TOkA, TError> result, Func<TOkA, Result<TOkB, TError>> f) Parameters Type Name Description Result <TOkA, TError> result Func <TOkA, Result <TOkB, TError>> f Returns Type Description Result <TOkB, TError> Type Parameters Name Description TOkA TOkB TError | Improve this Doc View Source BindFlat<TOkA, TOkB, TError>(Result<TOkA, TError>, Func<Result<TOkB, TError>>) Declaration public static Result<(TOkA, TOkB), TError> BindFlat<TOkA, TOkB, TError>(this Result<TOkA, TError> result, Func<Result<TOkB, TError>> f) Parameters Type Name Description Result <TOkA, TError> result Func < Result <TOkB, TError>> f Returns Type Description Result < System.ValueTuple <TOkA, TOkB>, TError> Type Parameters Name Description TOkA TOkB TError | Improve this Doc View Source BindFlat<TOkA, TOkB, TOkC, TError>(Result<(TOkA, TOkB), TError>, Func<Result<TOkC, TError>>) Declaration public static Result<(TOkA, TOkB, TOkC), TError> BindFlat<TOkA, TOkB, TOkC, TError>(this Result<(TOkA, TOkB), TError> result, Func<Result<TOkC, TError>> f) Parameters Type Name Description Result < System.ValueTuple <TOkA, TOkB>, TError> result Func < Result <TOkC, TError>> f Returns Type Description Result < System.ValueTuple <TOkA, TOkB, TOkC>, TError> Type Parameters Name Description TOkA TOkB TOkC TError | Improve this Doc View Source BindFlat<TOkA, TOkB, TOkC, TOkD, TError>(Result<(TOkA, TOkB, TOkC), TError>, Func<Result<TOkD, TError>>) Declaration public static Result<(TOkA, TOkB, TOkC, TOkD), TError> BindFlat<TOkA, TOkB, TOkC, TOkD, TError>(this Result<(TOkA, TOkB, TOkC), TError> result, Func<Result<TOkD, TError>> f) Parameters Type Name Description Result < System.ValueTuple <TOkA, TOkB, TOkC>, TError> result Func < Result <TOkD, TError>> f Returns Type Description Result < System.ValueTuple <TOkA, TOkB, TOkC, TOkD>, TError> Type Parameters Name Description TOkA TOkB TOkC TOkD TError | Improve this Doc View Source FailedContext<TOk, TError>(Result<TOk, TError>) Declaration public static TError FailedContext<TOk, TError>(this Result<TOk, TError> result) Parameters Type Name Description Result <TOk, TError> result Returns Type Description TError Type Parameters Name Description TOk TError | Improve this Doc View Source Filter<TOkA, TError>(Result<TOkA, TError>, Predicate<TOkA>, TError) Declaration public static Result<TOkA, TError> Filter<TOkA, TError>(this Result<TOkA, TError> result, Predicate<TOkA> filter, TError defaultError) Parameters Type Name Description Result <TOkA, TError> result Predicate <TOkA> filter TError defaultError Returns Type Description Result <TOkA, TError> Type Parameters Name Description TOkA TError | Improve this Doc View Source FilterError<TOkA, TError>(Result<TOkA, TError>, Predicate<TError>, TOkA) Declaration public static Result<TOkA, TError> FilterError<TOkA, TError>(this Result<TOkA, TError> result, Predicate<TError> filter, TOkA defaultOk) Parameters Type Name Description Result <TOkA, TError> result Predicate <TError> filter TOkA defaultOk Returns Type Description Result <TOkA, TError> Type Parameters Name Description TOkA TError | Improve this Doc View Source FlatMap<TOkA, TOkB, TOkResult, TError>(Result<(TOkA, TOkB), TError>, Func<TOkA, TOkB, Result<TOkResult, TError>>) Declaration public static Result<TOkResult, TError> FlatMap<TOkA, TOkB, TOkResult, TError>(this Result<(TOkA, TOkB), TError> result, Func<TOkA, TOkB, Result<TOkResult, TError>> f) Parameters Type Name Description Result < System.ValueTuple <TOkA, TOkB>, TError> result Func <TOkA, TOkB, Result <TOkResult, TError>> f Returns Type Description Result <TOkResult, TError> Type Parameters Name Description TOkA TOkB TOkResult TError | Improve this Doc View Source FlatMap<TOkA, TOkB, TOkC, TOkResult, TError>(Result<(TOkA, TOkB, TOkC), TError>, Func<TOkA, TOkB, TOkC, Result<TOkResult, TError>>) Declaration public static Result<TOkResult, TError> FlatMap<TOkA, TOkB, TOkC, TOkResult, TError>(this Result<(TOkA, TOkB, TOkC), TError> result, Func<TOkA, TOkB, TOkC, Result<TOkResult, TError>> f) Parameters Type Name Description Result < System.ValueTuple <TOkA, TOkB, TOkC>, TError> result Func <TOkA, TOkB, TOkC, Result <TOkResult, TError>> f Returns Type Description Result <TOkResult, TError> Type Parameters Name Description TOkA TOkB TOkC TOkResult TError | Improve this Doc View Source FlatMap<TOkA, TOkB, TOkC, TOkD, TOkResult, TError>(Result<(TOkA, TOkB, TOkC, TOkD), TError>, Func<TOkA, TOkB, TOkC, TOkD, Result<TOkResult, TError>>) Declaration public static Result<TOkResult, TError> FlatMap<TOkA, TOkB, TOkC, TOkD, TOkResult, TError>(this Result<(TOkA, TOkB, TOkC, TOkD), TError> result, Func<TOkA, TOkB, TOkC, TOkD, Result<TOkResult, TError>> f) Parameters Type Name Description Result < System.ValueTuple <TOkA, TOkB, TOkC, TOkD>, TError> result Func <TOkA, TOkB, TOkC, TOkD, Result <TOkResult, TError>> f Returns Type Description Result <TOkResult, TError> Type Parameters Name Description TOkA TOkB TOkC TOkD TOkResult TError | Improve this Doc View Source IsError<TOk, TError>(Result<TOk, TError>) Declaration public static bool IsError<TOk, TError>(this Result<TOk, TError> result) Parameters Type Name Description Result <TOk, TError> result Returns Type Description System.Boolean Type Parameters Name Description TOk TError | Improve this Doc View Source IsOk<TOk, TError>(Result<TOk, TError>) Declaration public static bool IsOk<TOk, TError>(this Result<TOk, TError> result) Parameters Type Name Description Result <TOk, TError> result Returns Type Description System.Boolean Type Parameters Name Description TOk TError | Improve this Doc View Source Iter<TOk, TError>(Result<TOk, TError>, Action<TOk>) Declaration public static Result<TOk, TError> Iter<TOk, TError>(this Result<TOk, TError> result, Action<TOk> action) Parameters Type Name Description Result <TOk, TError> result Action <TOk> action Returns Type Description Result <TOk, TError> Type Parameters Name Description TOk TError | Improve this Doc View Source IterAsync<TOk, TError>(Result<TOk, TError>, Func<TOk, ValueTask>) Declaration public static async ValueTask<Result<TOk, TError>> IterAsync<TOk, TError>(this Result<TOk, TError> result, Func<TOk, ValueTask> actionAsync) Parameters Type Name Description Result <TOk, TError> result Func <TOk, ValueTask > actionAsync Returns Type Description ValueTask < Result <TOk, TError>> Type Parameters Name Description TOk TError | Improve this Doc View Source IterError<TOk, TError>(Result<TOk, TError>, Action<TError>) Declaration public static Result<TOk, TError> IterError<TOk, TError>(this Result<TOk, TError> result, Action<TError> f) Parameters Type Name Description Result <TOk, TError> result Action <TError> f Returns Type Description Result <TOk, TError> Type Parameters Name Description TOk TError | Improve this Doc View Source Map<TOkA, TOkB, TError>(Result<TOkA, TError>, Func<TOkA, TOkB>) Result<TOk, TError> functor. Declaration public static Result<TOkB, TError> Map<TOkA, TOkB, TError>(this Result<TOkA, TError> result, Func<TOkA, TOkB> f) Parameters Type Name Description Result <TOkA, TError> result Func <TOkA, TOkB> f Returns Type Description Result <TOkB, TError> Type Parameters Name Description TOkA TOkB TError | Improve this Doc View Source Map<TOkA, TOkB, TOkResult, TError>(Result<(TOkA, TOkB), TError>, Func<TOkA, TOkB, TOkResult>) Declaration public static Result<TOkResult, TError> Map<TOkA, TOkB, TOkResult, TError>(this Result<(TOkA, TOkB), TError> result, Func<TOkA, TOkB, TOkResult> f) Parameters Type Name Description Result < System.ValueTuple <TOkA, TOkB>, TError> result Func <TOkA, TOkB, TOkResult> f Returns Type Description Result <TOkResult, TError> Type Parameters Name Description TOkA TOkB TOkResult TError | Improve this Doc View Source Map<TOkA, TOkB, TOkC, TOkResult, TError>(Result<(TOkA, TOkB, TOkC), TError>, Func<TOkA, TOkB, TOkC, TOkResult>) Declaration public static Result<TOkResult, TError> Map<TOkA, TOkB, TOkC, TOkResult, TError>(this Result<(TOkA, TOkB, TOkC), TError> result, Func<TOkA, TOkB, TOkC, TOkResult> f) Parameters Type Name Description Result < System.ValueTuple <TOkA, TOkB, TOkC>, TError> result Func <TOkA, TOkB, TOkC, TOkResult> f Returns Type Description Result <TOkResult, TError> Type Parameters Name Description TOkA TOkB TOkC TOkResult TError | Improve this Doc View Source Map<TOkA, TOkB, TOkC, TOkD, TOkResult, TError>(Result<(TOkA, TOkB, TOkC, TOkD), TError>, Func<TOkA, TOkB, TOkC, TOkD, TOkResult>) Declaration public static Result<TOkResult, TError> Map<TOkA, TOkB, TOkC, TOkD, TOkResult, TError>(this Result<(TOkA, TOkB, TOkC, TOkD), TError> result, Func<TOkA, TOkB, TOkC, TOkD, TOkResult> f) Parameters Type Name Description Result < System.ValueTuple <TOkA, TOkB, TOkC, TOkD>, TError> result Func <TOkA, TOkB, TOkC, TOkD, TOkResult> f Returns Type Description Result <TOkResult, TError> Type Parameters Name Description TOkA TOkB TOkC TOkD TOkResult TError | Improve this Doc View Source MapError<TOk, TErrorA, TErrorB>(Result<TOk, TErrorA>, Func<TErrorA, TErrorB>) Result<TOk, TError> error functor. Declaration public static Result<TOk, TErrorB> MapError<TOk, TErrorA, TErrorB>(this Result<TOk, TErrorA> result, Func<TErrorA, TErrorB> f) Parameters Type Name Description Result <TOk, TErrorA> result Func <TErrorA, TErrorB> f Returns Type Description Result <TOk, TErrorB> Type Parameters Name Description TOk TErrorA TErrorB | Improve this Doc View Source MapErrorToSuccess<TOk, TError>(Result<TOk, TError>, Func<TError, TOk>) Declaration public static Result<TOk, TError> MapErrorToSuccess<TOk, TError>(this Result<TOk, TError> result, Func<TError, TOk> f) Parameters Type Name Description Result <TOk, TError> result Func <TError, TOk> f Returns Type Description Result <TOk, TError> Type Parameters Name Description TOk TError | Improve this Doc View Source MapTask<TOkA, TOkB, TError>(Result<TOkA, TError>, Func<TOkA, Task<Result<TOkB, TError>>>) Declaration public static Task<Result<TOkB, TError>> MapTask<TOkA, TOkB, TError>(this Result<TOkA, TError> result, Func<TOkA, Task<Result<TOkB, TError>>> f) Parameters Type Name Description Result <TOkA, TError> result Func <TOkA, Task < Result <TOkB, TError>>> f Returns Type Description Task < Result <TOkB, TError>> Type Parameters Name Description TOkA TOkB TError | Improve this Doc View Source SequenceTask<TOk, TError>(Result<Task<TOk>, TError>) Declaration public static async Task<Result<TOk, TError>> SequenceTask<TOk, TError>(this Result<Task<TOk>, TError> result) Parameters Type Name Description Result < Task <TOk>, TError> result Returns Type Description Task < Result <TOk, TError>> Type Parameters Name Description TOk TError | Improve this Doc View Source SuccessContext<TOk, TError>(Result<TOk, TError>) Declaration public static TOk SuccessContext<TOk, TError>(this Result<TOk, TError> result) Parameters Type Name Description Result <TOk, TError> result Returns Type Description TOk Type Parameters Name Description TOk TError | Improve this Doc View Source ToError<TOk>(String) Declaration public static Result<TOk, string> ToError<TOk>(this string failedContext) Parameters Type Name Description System.String failedContext Returns Type Description Result <TOk, System.String > Type Parameters Name Description TOk | Improve this Doc View Source ToError<TOk, TError>(TError) Declaration public static Result<TOk, TError> ToError<TOk, TError>(this TError failedContext) Parameters Type Name Description TError failedContext Returns Type Description Result <TOk, TError> Type Parameters Name Description TOk TError | Improve this Doc View Source ToOk<TOk>(TOk) Declaration public static Result<TOk, ValueTuple> ToOk<TOk>(this TOk successContext) Parameters Type Name Description TOk successContext Returns Type Description Result <TOk, ValueTuple > Type Parameters Name Description TOk | Improve this Doc View Source ToOk<TOk, TError>(TOk) Declaration public static Result<TOk, TError> ToOk<TOk, TError>(this TOk successContext) Parameters Type Name Description TOk successContext Returns Type Description Result <TOk, TError> Type Parameters Name Description TOk TError | Improve this Doc View Source ToOkWithStringError<TOk>(TOk) Declaration public static Result<TOk, string> ToOkWithStringError<TOk>(this TOk successContext) Parameters Type Name Description TOk successContext Returns Type Description Result <TOk, System.String > Type Parameters Name Description TOk | Improve this Doc View Source TraverseA<TOkA, TOkB, TError>(ICollection<TOkA>, Func<TOkA, Result<TOkB, TError>>) Declaration public static (Result<ICollection<TOkB>, TError> result, ICollection<TError> errors) TraverseA<TOkA, TOkB, TError>(this ICollection<TOkA> elems, Func<TOkA, Result<TOkB, TError>> f) Parameters Type Name Description ICollection <TOkA> elems Func <TOkA, Result <TOkB, TError>> f Returns Type Description System.ValueTuple < Result < ICollection <TOkB>, TError>, ICollection <TError>> Type Parameters Name Description TOkA TOkB TError | Improve this Doc View Source TraverseA<TOkA, TOkB, TErrorA, TErrorB>(ICollection<TOkA>, Func<TOkA, Result<TOkB, TErrorA>>, Func<TErrorA, TErrorB>) Declaration public static (Result<ICollection<TOkB>, TErrorA> result, ICollection<TErrorB> errors) TraverseA<TOkA, TOkB, TErrorA, TErrorB>(this ICollection<TOkA> elems, Func<TOkA, Result<TOkB, TErrorA>> f, Func<TErrorA, TErrorB> ferr) Parameters Type Name Description ICollection <TOkA> elems Func <TOkA, Result <TOkB, TErrorA>> f Func <TErrorA, TErrorB> ferr Returns Type Description System.ValueTuple < Result < ICollection <TOkB>, TErrorA>, ICollection <TErrorB>> Type Parameters Name Description TOkA TOkB TErrorA TErrorB | Improve this Doc View Source TraverseM<TOkA, TOkB, TError>(ICollection<TOkA>, Func<TOkA, Result<TOkB, TError>>) Declaration public static Result<ICollection<TOkB>, TError> TraverseM<TOkA, TOkB, TError>(this ICollection<TOkA> elems, Func<TOkA, Result<TOkB, TError>> f) Parameters Type Name Description ICollection <TOkA> elems Func <TOkA, Result <TOkB, TError>> f Returns Type Description Result < ICollection <TOkB>, TError> Type Parameters Name Description TOkA TOkB TError | Improve this Doc View Source TryGetFailedContext<TOk, TError>(Result<TOk, TError>, out TError) Declaration public static bool TryGetFailedContext<TOk, TError>(this Result<TOk, TError> result, out TError failedContext) Parameters Type Name Description Result <TOk, TError> result TError failedContext Returns Type Description System.Boolean Type Parameters Name Description TOk TError | Improve this Doc View Source TryGetSuccessContext<TOk, TError>(Result<TOk, TError>, out TOk) Declaration public static bool TryGetSuccessContext<TOk, TError>(this Result<TOk, TError> result, out TOk successContext) Parameters Type Name Description Result <TOk, TError> result TOk successContext Returns Type Description System.Boolean Type Parameters Name Description TOk TError"
  },
  "api/p1eXu5.Result.Extensions.TaskExtensions.html": {
    "href": "api/p1eXu5.Result.Extensions.TaskExtensions.html",
    "title": "Class TaskExtensions | DocFX Material",
    "keywords": "Class TaskExtensions Extension methods for converting 's and 's to 's and 's with Result objects. Inheritance System.Object TaskExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : p1eXu5.Result.Extensions Assembly : p1eXu5.Result.dll Syntax public static class TaskExtensions Methods | Improve this Doc View Source TaskApply<TContextA, TContextB>(Task<TContextA>, Task<Func<TContextA, TContextB>>) Declaration public static async Task<TContextB> TaskApply<TContextA, TContextB>(this Task<TContextA> task, Task<Func<TContextA, TContextB>> f) Parameters Type Name Description Task <TContextA> task Task < Func <TContextA, TContextB>> f Returns Type Description Task <TContextB> Type Parameters Name Description TContextA TContextB | Improve this Doc View Source TaskMap<TContextA, TContextB>(Task<TContextA>, Func<TContextA, TContextB>) Declaration public static async Task<TContextB> TaskMap<TContextA, TContextB>(this Task<TContextA> task, Func<TContextA, TContextB> f) Parameters Type Name Description Task <TContextA> task Func <TContextA, TContextB> f Returns Type Description Task <TContextB> Type Parameters Name Description TContextA TContextB | Improve this Doc View Source ToTaskResult(Task, CancellationToken) Returns < Result > from . Declaration public static Task<Result<ValueTuple, Exception>> ToTaskResult(this Task task, CancellationToken cancellationToken) Parameters Type Name Description Task task CancellationToken cancellationToken Returns Type Description Task < Result < ValueTuple , Exception >> | Improve this Doc View Source ToTaskResult<TContext>(Task<TContext>, CancellationToken) Returns < Result < TContext >> from < TContext >. Declaration public static Task<Result<TContext, Exception>> ToTaskResult<TContext>(this Task<TContext> task, CancellationToken cancellationToken) Parameters Type Name Description Task <TContext> task CancellationToken cancellationToken Returns Type Description Task < Result <TContext, Exception >> Type Parameters Name Description TContext | Improve this Doc View Source ToValueTaskResult(Task, CancellationToken) Returns < Result > from . Declaration public static ValueTask<Result<ValueTuple, Exception>> ToValueTaskResult(this Task task, CancellationToken cancellationToken) Parameters Type Name Description Task task CancellationToken cancellationToken Returns Type Description ValueTask < Result < ValueTuple , Exception >> | Improve this Doc View Source ToValueTaskResult(ValueTask, CancellationToken) Returns < Result > from . Declaration public static ValueTask<Result<ValueTuple, Exception>> ToValueTaskResult(this ValueTask task, CancellationToken cancellationToken) Parameters Type Name Description ValueTask task CancellationToken cancellationToken Returns Type Description ValueTask < Result < ValueTuple , Exception >> | Improve this Doc View Source ToValueTaskResult<TContext>(Task<TContext>, CancellationToken) Returns < Result < TContext >> from < TContext >. Declaration public static ValueTask<Result<TContext, Exception>> ToValueTaskResult<TContext>(this Task<TContext> task, CancellationToken cancellationToken) Parameters Type Name Description Task <TContext> task CancellationToken cancellationToken Returns Type Description ValueTask < Result <TContext, Exception >> Type Parameters Name Description TContext | Improve this Doc View Source ToValueTaskResult<TContext>(ValueTask<TContext>, CancellationToken) Returns < Result < TContext >> from < TContext >. Declaration public static ValueTask<Result<TContext, Exception>> ToValueTaskResult<TContext>(this ValueTask<TContext> task, CancellationToken cancellationToken) Parameters Type Name Description ValueTask <TContext> task CancellationToken cancellationToken Returns Type Description ValueTask < Result <TContext, Exception >> Type Parameters Name Description TContext"
  },
  "api/p1eXu5.Result.Extensions.TaskResultExtensions.html": {
    "href": "api/p1eXu5.Result.Extensions.TaskResultExtensions.html",
    "title": "Class TaskResultExtensions | DocFX Material",
    "keywords": "Class TaskResultExtensions TaskResult extensions. Inheritance System.Object TaskResultExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : p1eXu5.Result.Extensions Assembly : p1eXu5.Result.dll Syntax public static class TaskResultExtensions Methods | Improve this Doc View Source Apply<TOkA, TOkB, __>(Task<Result<TOkA, __>>, Task<Result<Func<TOkA, TOkB>, __>>) TaskResult applicative functor. Declaration public static async Task<Result<TOkB, __>> Apply<TOkA, TOkB, __>(this Task<Result<TOkA, __>> task, Task<Result<Func<TOkA, TOkB>, __>> f) Parameters Type Name Description Task < Result <TOkA, __>> task Task < Result < Func <TOkA, TOkB>, __>> f Returns Type Description Task < Result <TOkB, __>> Type Parameters Name Description TOkA TOkB __ | Improve this Doc View Source Bibind<TOkA, TOkB, TErrorA, TErrorB>(Task<Result<TOkA, TErrorA>>, Func<TOkA, Task<Result<TOkB, TErrorB>>>, Func<TErrorA, Task<Result<TOkB, TErrorB>>>) Declaration public static async Task<Result<TOkB, TErrorB>> Bibind<TOkA, TOkB, TErrorA, TErrorB>(this Task<Result<TOkA, TErrorA>> task, Func<TOkA, Task<Result<TOkB, TErrorB>>> fs, Func<TErrorA, Task<Result<TOkB, TErrorB>>> fe) Parameters Type Name Description Task < Result <TOkA, TErrorA>> task Func <TOkA, Task < Result <TOkB, TErrorB>>> fs Func <TErrorA, Task < Result <TOkB, TErrorB>>> fe Returns Type Description Task < Result <TOkB, TErrorB>> Type Parameters Name Description TOkA TOkB TErrorA TErrorB | Improve this Doc View Source Bimap<TOkA, TOkB, TErrorA, TErrorB>(Task<Result<TOkA, TErrorA>>, Func<TOkA, TOkB>, Func<TErrorA, TErrorB>) Declaration public static async Task<Result<TOkB, TErrorB>> Bimap<TOkA, TOkB, TErrorA, TErrorB>(this Task<Result<TOkA, TErrorA>> task, Func<TOkA, TOkB> fs, Func<TErrorA, TErrorB> fe) Parameters Type Name Description Task < Result <TOkA, TErrorA>> task Func <TOkA, TOkB> fs Func <TErrorA, TErrorB> fe Returns Type Description Task < Result <TOkB, TErrorB>> Type Parameters Name Description TOkA TOkB TErrorA TErrorB | Improve this Doc View Source Bind<TOkA, TOkB, TError>(Task<Result<TOkA, TError>>, Func<TOkA, Task<Result<TOkB, TError>>>) TaskResult monad. Declaration public static async Task<Result<TOkB, TError>> Bind<TOkA, TOkB, TError>(this Task<Result<TOkA, TError>> task, Func<TOkA, Task<Result<TOkB, TError>>> f) Parameters Type Name Description Task < Result <TOkA, TError>> task Func <TOkA, Task < Result <TOkB, TError>>> f Returns Type Description Task < Result <TOkB, TError>> Type Parameters Name Description TOkA TOkB TError | Improve this Doc View Source Bind<TOkA, TOkB, TError>(Task<Result<TOkA, TError>>, Func<TOkA, ValueTask<TOkB>>) Declaration public static async Task<Result<TOkB, TError>> Bind<TOkA, TOkB, TError>(this Task<Result<TOkA, TError>> taskResult, Func<TOkA, ValueTask<TOkB>> f) Parameters Type Name Description Task < Result <TOkA, TError>> taskResult Func <TOkA, ValueTask <TOkB>> f Returns Type Description Task < Result <TOkB, TError>> Type Parameters Name Description TOkA TOkB TError | Improve this Doc View Source Bind<TOkA, TOkB, TError>(ValueTask<Result<TOkA, TError>>, Func<TOkA, ValueTask<Result<TOkB, TError>>>) Declaration public static async Task<Result<TOkB, TError>> Bind<TOkA, TOkB, TError>(this ValueTask<Result<TOkA, TError>> taskResult, Func<TOkA, ValueTask<Result<TOkB, TError>>> f) Parameters Type Name Description ValueTask < Result <TOkA, TError>> taskResult Func <TOkA, ValueTask < Result <TOkB, TError>>> f Returns Type Description Task < Result <TOkB, TError>> Type Parameters Name Description TOkA TOkB TError | Improve this Doc View Source Bind<TOkA, TOkB, TErrorA, TErrorB>(Task<Result<TOkA, TErrorA>>, Func<TOkA, Task<Result<TOkB, TErrorB>>>, Func<TErrorA, TErrorB>) Declaration public static async Task<Result<TOkB, TErrorB>> Bind<TOkA, TOkB, TErrorA, TErrorB>(this Task<Result<TOkA, TErrorA>> task, Func<TOkA, Task<Result<TOkB, TErrorB>>> f, Func<TErrorA, TErrorB> fe) Parameters Type Name Description Task < Result <TOkA, TErrorA>> task Func <TOkA, Task < Result <TOkB, TErrorB>>> f Func <TErrorA, TErrorB> fe Returns Type Description Task < Result <TOkB, TErrorB>> Type Parameters Name Description TOkA TOkB TErrorA TErrorB | Improve this Doc View Source BindError<TOk, TErrorA, TErrorB>(Task<Result<TOk, TErrorA>>, Func<TErrorA, Task<Result<TOk, TErrorB>>>) Declaration public static async Task<Result<TOk, TErrorB>> BindError<TOk, TErrorA, TErrorB>(this Task<Result<TOk, TErrorA>> task, Func<TErrorA, Task<Result<TOk, TErrorB>>> f) Parameters Type Name Description Task < Result <TOk, TErrorA>> task Func <TErrorA, Task < Result <TOk, TErrorB>>> f Returns Type Description Task < Result <TOk, TErrorB>> Type Parameters Name Description TOk TErrorA TErrorB | Improve this Doc View Source BindV<TOkA, TOkB, TError>(ValueTask<Result<TOkA, TError>>, Func<TOkA, Task<Result<TOkB, TError>>>) Declaration public static async ValueTask<Result<TOkB, TError>> BindV<TOkA, TOkB, TError>(this ValueTask<Result<TOkA, TError>> taskResult, Func<TOkA, Task<Result<TOkB, TError>>> f) Parameters Type Name Description ValueTask < Result <TOkA, TError>> taskResult Func <TOkA, Task < Result <TOkB, TError>>> f Returns Type Description ValueTask < Result <TOkB, TError>> Type Parameters Name Description TOkA TOkB TError | Improve this Doc View Source Filter<TOkA, TError>(Task<Result<TOkA, TError>>, Predicate<TOkA>, TError) Declaration public static async Task<Result<TOkA, TError>> Filter<TOkA, TError>(this Task<Result<TOkA, TError>> task, Predicate<TOkA> filter, TError defaultError) Parameters Type Name Description Task < Result <TOkA, TError>> task Predicate <TOkA> filter TError defaultError Returns Type Description Task < Result <TOkA, TError>> Type Parameters Name Description TOkA TError | Improve this Doc View Source FilterError<TOkA, TError>(Task<Result<TOkA, TError>>, Predicate<TError>, TOkA) Declaration public static async Task<Result<TOkA, TError>> FilterError<TOkA, TError>(this Task<Result<TOkA, TError>> task, Predicate<TError> filter, TOkA defaultError) Parameters Type Name Description Task < Result <TOkA, TError>> task Predicate <TError> filter TOkA defaultError Returns Type Description Task < Result <TOkA, TError>> Type Parameters Name Description TOkA TError | Improve this Doc View Source Map<TOkA, TOkB, TError>(Task<Result<TOkA, TError>>, Func<TOkA, TOkB>) Declaration public static async Task<Result<TOkB, TError>> Map<TOkA, TOkB, TError>(this Task<Result<TOkA, TError>> task, Func<TOkA, TOkB> f) Parameters Type Name Description Task < Result <TOkA, TError>> task Func <TOkA, TOkB> f Returns Type Description Task < Result <TOkB, TError>> Type Parameters Name Description TOkA TOkB TError | Improve this Doc View Source MapError<TOk, TErrorA, TErrorB>(Task<Result<TOk, TErrorA>>, Func<TErrorA, TErrorB>) Declaration public static async Task<Result<TOk, TErrorB>> MapError<TOk, TErrorA, TErrorB>(this Task<Result<TOk, TErrorA>> task, Func<TErrorA, TErrorB> f) Parameters Type Name Description Task < Result <TOk, TErrorA>> task Func <TErrorA, TErrorB> f Returns Type Description Task < Result <TOk, TErrorB>> Type Parameters Name Description TOk TErrorA TErrorB | Improve this Doc View Source MapFlat<TOkA, TOkB, TOkResult, TError>(Task<Result<(TOkA, TOkB), TError>>, Func<TOkA, TOkB, Result<TOkResult, TError>>) Declaration public static async Task<Result<TOkResult, TError>> MapFlat<TOkA, TOkB, TOkResult, TError>(this Task<Result<(TOkA, TOkB), TError>> result, Func<TOkA, TOkB, Result<TOkResult, TError>> f) Parameters Type Name Description Task < Result < System.ValueTuple <TOkA, TOkB>, TError>> result Func <TOkA, TOkB, Result <TOkResult, TError>> f Returns Type Description Task < Result <TOkResult, TError>> Type Parameters Name Description TOkA TOkB TOkResult TError | Improve this Doc View Source MapFlat<TOkA, TOkB, TOkC, TOkResult, TError>(Task<Result<(TOkA, TOkB, TOkC), TError>>, Func<TOkA, TOkB, TOkC, Result<TOkResult, TError>>) Declaration public static async Task<Result<TOkResult, TError>> MapFlat<TOkA, TOkB, TOkC, TOkResult, TError>(this Task<Result<(TOkA, TOkB, TOkC), TError>> result, Func<TOkA, TOkB, TOkC, Result<TOkResult, TError>> f) Parameters Type Name Description Task < Result < System.ValueTuple <TOkA, TOkB, TOkC>, TError>> result Func <TOkA, TOkB, TOkC, Result <TOkResult, TError>> f Returns Type Description Task < Result <TOkResult, TError>> Type Parameters Name Description TOkA TOkB TOkC TOkResult TError | Improve this Doc View Source MapFlat<TOkA, TOkB, TOkC, TOkD, TOkResult, TError>(Task<Result<(TOkA, TOkB, TOkC, TOkD), TError>>, Func<TOkA, TOkB, TOkC, TOkD, Result<TOkResult, TError>>) Declaration public static async Task<Result<TOkResult, TError>> MapFlat<TOkA, TOkB, TOkC, TOkD, TOkResult, TError>(this Task<Result<(TOkA, TOkB, TOkC, TOkD), TError>> result, Func<TOkA, TOkB, TOkC, TOkD, Result<TOkResult, TError>> f) Parameters Type Name Description Task < Result < System.ValueTuple <TOkA, TOkB, TOkC, TOkD>, TError>> result Func <TOkA, TOkB, TOkC, TOkD, Result <TOkResult, TError>> f Returns Type Description Task < Result <TOkResult, TError>> Type Parameters Name Description TOkA TOkB TOkC TOkD TOkResult TError | Improve this Doc View Source MapResult<TOkA, TOkB, TError>(Task<Result<TOkA, TError>>, Func<TOkA, Result<TOkB, TError>>) Declaration public static async Task<Result<TOkB, TError>> MapResult<TOkA, TOkB, TError>(this Task<Result<TOkA, TError>> taskResult, Func<TOkA, Result<TOkB, TError>> f) Parameters Type Name Description Task < Result <TOkA, TError>> taskResult Func <TOkA, Result <TOkB, TError>> f Returns Type Description Task < Result <TOkB, TError>> Type Parameters Name Description TOkA TOkB TError | Improve this Doc View Source MapResult<TOkA, TOkB, TError>(ValueTask<Result<TOkA, TError>>, Func<TOkA, Result<TOkB, TError>>) Declaration public static async Task<Result<TOkB, TError>> MapResult<TOkA, TOkB, TError>(this ValueTask<Result<TOkA, TError>> taskResult, Func<TOkA, Result<TOkB, TError>> f) Parameters Type Name Description ValueTask < Result <TOkA, TError>> taskResult Func <TOkA, Result <TOkB, TError>> f Returns Type Description Task < Result <TOkB, TError>> Type Parameters Name Description TOkA TOkB TError | Improve this Doc View Source Retn<TOk, TError>(TOk) Retn for TaskResult. Declaration public static Task<Result<TOk, TError>> Retn<TOk, TError>(this TOk succeededContext) Parameters Type Name Description TOk succeededContext Returns Type Description Task < Result <TOk, TError>> Type Parameters Name Description TOk TError | Improve this Doc View Source Retn<TOk, TError>(Result<TOk, TError>) Retn for TaskResult. Declaration public static Task<Result<TOk, TError>> Retn<TOk, TError>(this Result<TOk, TError> result) Parameters Type Name Description Result <TOk, TError> result Returns Type Description Task < Result <TOk, TError>> Type Parameters Name Description TOk TError"
  },
  "api/p1eXu5.Result.html": {
    "href": "api/p1eXu5.Result.html",
    "title": "Namespace p1eXu5.Result | DocFX Material",
    "keywords": "Namespace p1eXu5.Result Classes Result Result<TOk, TError> Result<TOk, TError>.Error Result<TOk, TError>.Ok Interfaces IResult IResult<TOk, TFailure>"
  },
  "api/p1eXu5.Result.IResult.html": {
    "href": "api/p1eXu5.Result.IResult.html",
    "title": "Interface IResult | DocFX Material",
    "keywords": "Interface IResult Namespace : p1eXu5.Result Assembly : p1eXu5.Result.dll Syntax public interface IResult Properties | Improve this Doc View Source Failed Gets a value indicating whether the IResult is failed. Declaration bool Failed { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Succeeded Gets a value indicating whether the IResult is succeeded. Declaration bool Succeeded { get; } Property Value Type Description System.Boolean Extension Methods ResultExtensions.ToOk<TOk, TError>(TOk) ResultExtensions.ToOk<TOk>(TOk) ResultExtensions.ToOkWithStringError<TOk>(TOk) ResultExtensions.ToError<TOk, TError>(TError) TaskResultExtensions.Retn<TOk, TError>(TOk)"
  },
  "api/p1eXu5.Result.IResult-2.html": {
    "href": "api/p1eXu5.Result.IResult-2.html",
    "title": "Interface IResult<TOk, TFailure> | DocFX Material",
    "keywords": "Interface IResult<TOk, TFailure> Inherited Members IResult.Succeeded IResult.Failed Namespace : p1eXu5.Result Assembly : p1eXu5.Result.dll Syntax public interface IResult<TOk, TFailure> : IResult Type Parameters Name Description TOk TFailure Properties | Improve this Doc View Source FailedContext Gets failed context. If Result<TOk, TError> failed then throws ResultContextAccessException . Declaration TFailure FailedContext { get; } Property Value Type Description TFailure Exceptions Type Condition ResultContextAccessException | Improve this Doc View Source SuccessContext Gets succeeded context. If Result<TOk, TError> failed then throws ResultContextAccessException . Declaration TOk SuccessContext { get; } Property Value Type Description TOk Exceptions Type Condition ResultContextAccessException Methods | Improve this Doc View Source TryGetFailedContext(out TFailure) Gets the failed result context. Declaration bool TryGetFailedContext(out TFailure failedContext) Parameters Type Name Description TFailure failedContext Returns Type Description System.Boolean | Improve this Doc View Source TryGetSucceededContext(out TOk) Gets the succeeded result context. Declaration bool TryGetSucceededContext(out TOk succeededContext) Parameters Type Name Description TOk succeededContext Returns Type Description System.Boolean Extension Methods ResultExtensions.ToOk<TOk, TError>(TOk) ResultExtensions.ToOk<TOk>(TOk) ResultExtensions.ToOkWithStringError<TOk>(TOk) ResultExtensions.ToError<TOk, TError>(TError) TaskResultExtensions.Retn<TOk, TError>(TOk)"
  },
  "api/p1eXu5.Result.Result.html": {
    "href": "api/p1eXu5.Result.Result.html",
    "title": "Class Result | DocFX Material",
    "keywords": "Class Result Inheritance System.Object Result Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : p1eXu5.Result Assembly : p1eXu5.Result.dll Syntax public static class Result Methods | Improve this Doc View Source UnitErrorWith<TOk>() Declaration public static Result<TOk, ValueTuple> UnitErrorWith<TOk>() Returns Type Description Result <TOk, ValueTuple > Type Parameters Name Description TOk | Improve this Doc View Source UnitOkWith<TError>() Declaration public static Result<ValueTuple, TError> UnitOkWith<TError>() Returns Type Description Result < ValueTuple , TError> Type Parameters Name Description TError"
  },
  "api/p1eXu5.Result.Result-2.Error.html": {
    "href": "api/p1eXu5.Result.Result-2.Error.html",
    "title": "Class Result<TOk, TError>.Error | DocFX Material",
    "keywords": "Class Result<TOk, TError>.Error Inheritance System.Object Result <TOk, TError> Result<TOk, TError>.Error Implements System.IEquatable < Result <TOk, TError>> System.IEquatable < Result.Error <>> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : p1eXu5.Result Assembly : p1eXu5.Result.dll Syntax public class Error : Result<TOk, TError>, IEquatable<Result<TOk, TError>>, IEquatable<Result<TOk, TError>.Error> Constructors | Improve this Doc View Source Error(TError) Declaration public Error(TError FailedContext) Parameters Type Name Description TError FailedContext Properties | Improve this Doc View Source FailedContext Declaration public TError FailedContext { get; set; } Property Value Type Description TError Implements System.IEquatable<T> System.IEquatable<T> Extension Methods ResultExtensions.Bind<TOkA, TOkB, TError>(Result<TOkA, TError>, Func<TOkA, Result<TOkB, TError>>) ResultExtensions.BindFlat<TOkA, TOkB, TError>(Result<TOkA, TError>, Func<Result<TOkB, TError>>) ResultExtensions.ToOk<TOk, TError>(TOk) ResultExtensions.ToOk<TOk>(TOk) ResultExtensions.ToOkWithStringError<TOk>(TOk) ResultExtensions.ToError<TOk, TError>(TError) ResultExtensions.IsOk<TOk, TError>(Result<TOk, TError>) ResultExtensions.IsError<TOk, TError>(Result<TOk, TError>) ResultExtensions.SuccessContext<TOk, TError>(Result<TOk, TError>) ResultExtensions.TryGetSuccessContext<TOk, TError>(Result<TOk, TError>, out TOk) ResultExtensions.FailedContext<TOk, TError>(Result<TOk, TError>) ResultExtensions.TryGetFailedContext<TOk, TError>(Result<TOk, TError>, out TError) ResultExtensions.Filter<TOkA, TError>(Result<TOkA, TError>, Predicate<TOkA>, TError) ResultExtensions.FilterError<TOkA, TError>(Result<TOkA, TError>, Predicate<TError>, TOkA) ResultExtensions.Iter<TOk, TError>(Result<TOk, TError>, Action<TOk>) ResultExtensions.IterAsync<TOk, TError>(Result<TOk, TError>, Func<TOk, ValueTask>) ResultExtensions.IterError<TOk, TError>(Result<TOk, TError>, Action<TError>) ResultExtensions.Map<TOkA, TOkB, TError>(Result<TOkA, TError>, Func<TOkA, TOkB>) ResultExtensions.MapError<TOk, TErrorA, TErrorB>(Result<TOk, TErrorA>, Func<TErrorA, TErrorB>) ResultExtensions.MapErrorToSuccess<TOk, TError>(Result<TOk, TError>, Func<TError, TOk>) ResultExtensions.Bimap<TOkA, TOkB, TErrorA, TErrorB>(Result<TOkA, TErrorA>, Func<TOkA, TOkB>, Func<TErrorA, TErrorB>) ResultExtensions.MapTask<TOkA, TOkB, TError>(Result<TOkA, TError>, Func<TOkA, Task<Result<TOkB, TError>>>) TaskResultExtensions.Retn<TOk, TError>(TOk) TaskResultExtensions.Retn<TOk, TError>(Result<TOk, TError>)"
  },
  "api/p1eXu5.Result.Result-2.html": {
    "href": "api/p1eXu5.Result.Result-2.html",
    "title": "Class Result<TOk, TError> | DocFX Material",
    "keywords": "Class Result<TOk, TError> Inheritance System.Object Result<TOk, TError> Result<TOk, TError>.Error Result<TOk, TError>.Ok Implements System.IEquatable < Result <TOk, TError>> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : p1eXu5.Result Assembly : p1eXu5.Result.dll Syntax public abstract class Result<TOk, TError> : IEquatable<Result<TOk, TError>> Type Parameters Name Description TOk TError Implements System.IEquatable<T> Extension Methods ResultExtensions.Bind<TOkA, TOkB, TError>(Result<TOkA, TError>, Func<TOkA, Result<TOkB, TError>>) ResultExtensions.BindFlat<TOkA, TOkB, TError>(Result<TOkA, TError>, Func<Result<TOkB, TError>>) ResultExtensions.ToOk<TOk, TError>(TOk) ResultExtensions.ToOk<TOk>(TOk) ResultExtensions.ToOkWithStringError<TOk>(TOk) ResultExtensions.ToError<TOk, TError>(TError) ResultExtensions.IsOk<TOk, TError>(Result<TOk, TError>) ResultExtensions.IsError<TOk, TError>(Result<TOk, TError>) ResultExtensions.SuccessContext<TOk, TError>(Result<TOk, TError>) ResultExtensions.TryGetSuccessContext<TOk, TError>(Result<TOk, TError>, out TOk) ResultExtensions.FailedContext<TOk, TError>(Result<TOk, TError>) ResultExtensions.TryGetFailedContext<TOk, TError>(Result<TOk, TError>, out TError) ResultExtensions.Filter<TOkA, TError>(Result<TOkA, TError>, Predicate<TOkA>, TError) ResultExtensions.FilterError<TOkA, TError>(Result<TOkA, TError>, Predicate<TError>, TOkA) ResultExtensions.Iter<TOk, TError>(Result<TOk, TError>, Action<TOk>) ResultExtensions.IterAsync<TOk, TError>(Result<TOk, TError>, Func<TOk, ValueTask>) ResultExtensions.IterError<TOk, TError>(Result<TOk, TError>, Action<TError>) ResultExtensions.Map<TOkA, TOkB, TError>(Result<TOkA, TError>, Func<TOkA, TOkB>) ResultExtensions.MapError<TOk, TErrorA, TErrorB>(Result<TOk, TErrorA>, Func<TErrorA, TErrorB>) ResultExtensions.MapErrorToSuccess<TOk, TError>(Result<TOk, TError>, Func<TError, TOk>) ResultExtensions.Bimap<TOkA, TOkB, TErrorA, TErrorB>(Result<TOkA, TErrorA>, Func<TOkA, TOkB>, Func<TErrorA, TErrorB>) ResultExtensions.MapTask<TOkA, TOkB, TError>(Result<TOkA, TError>, Func<TOkA, Task<Result<TOkB, TError>>>) TaskResultExtensions.Retn<TOk, TError>(Result<TOk, TError>) TaskResultExtensions.Retn<TOk, TError>(Result<TOk, TError>)"
  },
  "api/p1eXu5.Result.Result-2.Ok.html": {
    "href": "api/p1eXu5.Result.Result-2.Ok.html",
    "title": "Class Result<TOk, TError>.Ok | DocFX Material",
    "keywords": "Class Result<TOk, TError>.Ok Inheritance System.Object Result <TOk, TError> Result<TOk, TError>.Ok Implements System.IEquatable < Result <TOk, TError>> System.IEquatable < Result.Ok <>> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : p1eXu5.Result Assembly : p1eXu5.Result.dll Syntax public sealed class Ok : Result<TOk, TError>, IEquatable<Result<TOk, TError>>, IEquatable<Result<TOk, TError>.Ok> Constructors | Improve this Doc View Source Ok(TOk) Declaration public Ok(TOk SuccessContext) Parameters Type Name Description TOk SuccessContext Properties | Improve this Doc View Source SuccessContext Declaration public TOk SuccessContext { get; set; } Property Value Type Description TOk Implements System.IEquatable<T> System.IEquatable<T> Extension Methods ResultExtensions.Bind<TOkA, TOkB, TError>(Result<TOkA, TError>, Func<TOkA, Result<TOkB, TError>>) ResultExtensions.BindFlat<TOkA, TOkB, TError>(Result<TOkA, TError>, Func<Result<TOkB, TError>>) ResultExtensions.ToOk<TOk, TError>(TOk) ResultExtensions.ToOk<TOk>(TOk) ResultExtensions.ToOkWithStringError<TOk>(TOk) ResultExtensions.ToError<TOk, TError>(TError) ResultExtensions.IsOk<TOk, TError>(Result<TOk, TError>) ResultExtensions.IsError<TOk, TError>(Result<TOk, TError>) ResultExtensions.SuccessContext<TOk, TError>(Result<TOk, TError>) ResultExtensions.TryGetSuccessContext<TOk, TError>(Result<TOk, TError>, out TOk) ResultExtensions.FailedContext<TOk, TError>(Result<TOk, TError>) ResultExtensions.TryGetFailedContext<TOk, TError>(Result<TOk, TError>, out TError) ResultExtensions.Filter<TOkA, TError>(Result<TOkA, TError>, Predicate<TOkA>, TError) ResultExtensions.FilterError<TOkA, TError>(Result<TOkA, TError>, Predicate<TError>, TOkA) ResultExtensions.Iter<TOk, TError>(Result<TOk, TError>, Action<TOk>) ResultExtensions.IterAsync<TOk, TError>(Result<TOk, TError>, Func<TOk, ValueTask>) ResultExtensions.IterError<TOk, TError>(Result<TOk, TError>, Action<TError>) ResultExtensions.Map<TOkA, TOkB, TError>(Result<TOkA, TError>, Func<TOkA, TOkB>) ResultExtensions.MapError<TOk, TErrorA, TErrorB>(Result<TOk, TErrorA>, Func<TErrorA, TErrorB>) ResultExtensions.MapErrorToSuccess<TOk, TError>(Result<TOk, TError>, Func<TError, TOk>) ResultExtensions.Bimap<TOkA, TOkB, TErrorA, TErrorB>(Result<TOkA, TErrorA>, Func<TOkA, TOkB>, Func<TErrorA, TErrorB>) ResultExtensions.MapTask<TOkA, TOkB, TError>(Result<TOkA, TError>, Func<TOkA, Task<Result<TOkB, TError>>>) TaskResultExtensions.Retn<TOk, TError>(TOk) TaskResultExtensions.Retn<TOk, TError>(Result<TOk, TError>)"
  },
  "api/p1eXu5.Result.Serialization.html": {
    "href": "api/p1eXu5.Result.Serialization.html",
    "title": "Namespace p1eXu5.Result.Serialization | DocFX Material",
    "keywords": "Namespace p1eXu5.Result.Serialization Classes ResultJsonConverterFactory"
  },
  "api/p1eXu5.Result.Serialization.ResultJsonConverterFactory.html": {
    "href": "api/p1eXu5.Result.Serialization.ResultJsonConverterFactory.html",
    "title": "Class ResultJsonConverterFactory | DocFX Material",
    "keywords": "Class ResultJsonConverterFactory Inheritance System.Object System.Text.Json.Serialization.JsonConverter System.Text.Json.Serialization.JsonConverterFactory ResultJsonConverterFactory Inherited Members System.Text.Json.Serialization.JsonConverterFactory.CreateConverter(System.Type, System.Text.Json.JsonSerializerOptions) System.Text.Json.Serialization.JsonConverter.CanConvert(System.Type) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : p1eXu5.Result.Serialization Assembly : p1eXu5.Result.dll Syntax public class ResultJsonConverterFactory : JsonConverterFactory Methods | Improve this Doc View Source CanConvert(Type) Declaration public override bool CanConvert(Type typeToConvert) Parameters Type Name Description Type typeToConvert Returns Type Description System.Boolean | Improve this Doc View Source CreateConverter(Type, JsonSerializerOptions) Declaration public override JsonConverter CreateConverter(Type typeToConvert, JsonSerializerOptions options) Parameters Type Name Description Type typeToConvert System.Text.Json.JsonSerializerOptions options Returns Type Description System.Text.Json.Serialization.JsonConverter Extension Methods ResultExtensions.ToOk<TOk, TError>(TOk) ResultExtensions.ToOk<TOk>(TOk) ResultExtensions.ToOkWithStringError<TOk>(TOk) ResultExtensions.ToError<TOk, TError>(TError) TaskResultExtensions.Retn<TOk, TError>(TOk)"
  },
  "index.html": {
    "href": "index.html",
    "title": "Result | DocFX Material",
    "keywords": "Result"
  },
  "README.html": {
    "href": "README.html",
    "title": "Result | DocFX Material",
    "keywords": "Result Package Versions p1eXu5.Result Api Documentation 1. Creating Result object. using p1eXu5.Result; using p1eXu5.Result.Extensions; using Unit = System.ValueTuple; // using constructors var successResult = new Result<string, string>.Ok(\"1\"); var errorResult = new Result<string, string>.Error(\"error\"); // using extension methods Result<int, Unit> intSuccessResult = 18.ToOk(); Result<string, string> r2 = \"1\".ToError<string>(); See Api Documentation for other extension methods"
  }
}