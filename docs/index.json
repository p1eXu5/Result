{
  "api/index.html": {
    "href": "api/index.html",
    "title": "API Documentation | DocFX Material",
    "keywords": "API Documentation"
  },
  "api/p1eXu5.Result.Exceptions.html": {
    "href": "api/p1eXu5.Result.Exceptions.html",
    "title": "Namespace p1eXu5.Result.Exceptions | DocFX Material",
    "keywords": "Namespace p1eXu5.Result.Exceptions Classes ResultContextAccessException"
  },
  "api/p1eXu5.Result.Exceptions.ResultContextAccessException.html": {
    "href": "api/p1eXu5.Result.Exceptions.ResultContextAccessException.html",
    "title": "Class ResultContextAccessException | DocFX Material",
    "keywords": "Class ResultContextAccessException Inheritance System.Object System.Exception System.SystemException System.InvalidOperationException ResultContextAccessException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : p1eXu5.Result.Exceptions Assembly : p1eXu5.Result.dll Syntax public class ResultContextAccessException : InvalidOperationException, ISerializable Constructors | Improve this Doc View Source ResultContextAccessException(String) Declaration public ResultContextAccessException(string error) Parameters Type Name Description System.String error Implements System.Runtime.Serialization.ISerializable Extension Methods ResultExtensions.ToResult<TSuccess>(TSuccess) TaskResultExtensions.Retn<_>(_)"
  },
  "api/p1eXu5.Result.Extensions.html": {
    "href": "api/p1eXu5.Result.Extensions.html",
    "title": "Namespace p1eXu5.Result.Extensions | DocFX Material",
    "keywords": "Namespace p1eXu5.Result.Extensions Classes ResultExtensions Result<TSuccess, TFailure> extensions. TaskExtensions TaskResultExtensions TaskResult extensions."
  },
  "api/p1eXu5.Result.Extensions.ResultExtensions.html": {
    "href": "api/p1eXu5.Result.Extensions.ResultExtensions.html",
    "title": "Class ResultExtensions | DocFX Material",
    "keywords": "Class ResultExtensions Result<TSuccess, TFailure> extensions. Inheritance System.Object ResultExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : p1eXu5.Result.Extensions Assembly : p1eXu5.Result.dll Syntax public static class ResultExtensions Methods | Improve this Doc View Source Bimap<TSuccessA, TSuccessB, TErrorA, TErrorB>(Result<TSuccessA, TErrorA>, Func<TSuccessA, TSuccessB>, Func<TErrorA, TErrorB>) Declaration public static Result<TSuccessB, TErrorB> Bimap<TSuccessA, TSuccessB, TErrorA, TErrorB>(this Result<TSuccessA, TErrorA> result, Func<TSuccessA, TSuccessB> fs, Func<TErrorA, TErrorB> fe) Parameters Type Name Description Result <TSuccessA, TErrorA> result System.Func <TSuccessA, TSuccessB> fs System.Func <TErrorA, TErrorB> fe Returns Type Description Result <TSuccessB, TErrorB> Type Parameters Name Description TSuccessA TSuccessB TErrorA TErrorB | Improve this Doc View Source Bind<_, __>(Result<_, __>, Func<_, Result<_, __>>) Result<TSuccess, TFailure> monad. Declaration public static Result<_, __> Bind<_, __>(this Result<_, __> result, Func<_, Result<_, __>> f) Parameters Type Name Description Result <_, __> result System.Func <_, Result <_, __>> f Returns Type Description Result <_, __> Type Parameters Name Description _ __ | Improve this Doc View Source Bind<TSuccessA, TSuccessB>(Result<TSuccessA>, Func<TSuccessA, Result<TSuccessB>>) Declaration public static Result<TSuccessB> Bind<TSuccessA, TSuccessB>(this Result<TSuccessA> result, Func<TSuccessA, Result<TSuccessB>> f) Parameters Type Name Description Result <TSuccessA> result System.Func <TSuccessA, Result <TSuccessB>> f Returns Type Description Result <TSuccessB> Type Parameters Name Description TSuccessA TSuccessB | Improve this Doc View Source BindFlat<TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10>(Result<(TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9)>, Func<Result<TS10>>) Declaration public static Result<(TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10)> BindFlat<TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10>(this Result<(TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9)> result, Func<Result<TS10>> f) Parameters Type Name Description Result < System.ValueTuple <TS1, TS2, TS3, TS4, TS5, TS6, TS7, System.ValueTuple <TS8, TS9>>> result System.Func < Result <TS10>> f Returns Type Description Result < System.ValueTuple <TS1, TS2, TS3, TS4, TS5, TS6, TS7, System.ValueTuple <TS8, TS9, TS10>>> Type Parameters Name Description TS1 TS2 TS3 TS4 TS5 TS6 TS7 TS8 TS9 TS10 | Improve this Doc View Source BindFlat<TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10, TS11>(Result<(TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10)>, Func<Result<TS11>>) Declaration public static Result<(TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10, TS11)> BindFlat<TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10, TS11>(this Result<(TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10)> result, Func<Result<TS11>> f) Parameters Type Name Description Result < System.ValueTuple <TS1, TS2, TS3, TS4, TS5, TS6, TS7, System.ValueTuple <TS8, TS9, TS10>>> result System.Func < Result <TS11>> f Returns Type Description Result < System.ValueTuple <TS1, TS2, TS3, TS4, TS5, TS6, TS7, System.ValueTuple <TS8, TS9, TS10, TS11>>> Type Parameters Name Description TS1 TS2 TS3 TS4 TS5 TS6 TS7 TS8 TS9 TS10 TS11 | Improve this Doc View Source BindFlat<TSuccessA, TSuccessB>(Result<TSuccessA>, Func<Result<TSuccessB>>) Declaration public static Result<(TSuccessA, TSuccessB)> BindFlat<TSuccessA, TSuccessB>(this Result<TSuccessA> result, Func<Result<TSuccessB>> f) Parameters Type Name Description Result <TSuccessA> result System.Func < Result <TSuccessB>> f Returns Type Description Result < System.ValueTuple <TSuccessA, TSuccessB>> Type Parameters Name Description TSuccessA TSuccessB | Improve this Doc View Source BindFlat<TSuccessA, TSuccessB, TSuccessC>(Result<(TSuccessA, TSuccessB)>, Func<Result<TSuccessC>>) Declaration public static Result<(TSuccessA, TSuccessB, TSuccessC)> BindFlat<TSuccessA, TSuccessB, TSuccessC>(this Result<(TSuccessA, TSuccessB)> result, Func<Result<TSuccessC>> f) Parameters Type Name Description Result < System.ValueTuple <TSuccessA, TSuccessB>> result System.Func < Result <TSuccessC>> f Returns Type Description Result < System.ValueTuple <TSuccessA, TSuccessB, TSuccessC>> Type Parameters Name Description TSuccessA TSuccessB TSuccessC | Improve this Doc View Source BindFlat<TSuccessA, TSuccessB, TSuccessC, TSuccessD>(Result<(TSuccessA, TSuccessB, TSuccessC)>, Func<Result<TSuccessD>>) Declaration public static Result<(TSuccessA, TSuccessB, TSuccessC, TSuccessD)> BindFlat<TSuccessA, TSuccessB, TSuccessC, TSuccessD>(this Result<(TSuccessA, TSuccessB, TSuccessC)> result, Func<Result<TSuccessD>> f) Parameters Type Name Description Result < System.ValueTuple <TSuccessA, TSuccessB, TSuccessC>> result System.Func < Result <TSuccessD>> f Returns Type Description Result < System.ValueTuple <TSuccessA, TSuccessB, TSuccessC, TSuccessD>> Type Parameters Name Description TSuccessA TSuccessB TSuccessC TSuccessD | Improve this Doc View Source BindFlat<TSuccessA, TSuccessB, TSuccessC, TSuccessD, TSuccessE>(Result<(TSuccessA, TSuccessB, TSuccessC, TSuccessD)>, Func<Result<TSuccessE>>) Declaration public static Result<(TSuccessA, TSuccessB, TSuccessC, TSuccessD, TSuccessE)> BindFlat<TSuccessA, TSuccessB, TSuccessC, TSuccessD, TSuccessE>(this Result<(TSuccessA, TSuccessB, TSuccessC, TSuccessD)> result, Func<Result<TSuccessE>> f) Parameters Type Name Description Result < System.ValueTuple <TSuccessA, TSuccessB, TSuccessC, TSuccessD>> result System.Func < Result <TSuccessE>> f Returns Type Description Result < System.ValueTuple <TSuccessA, TSuccessB, TSuccessC, TSuccessD, TSuccessE>> Type Parameters Name Description TSuccessA TSuccessB TSuccessC TSuccessD TSuccessE | Improve this Doc View Source BindFlat<TSuccessA, TSuccessB, TSuccessC, TSuccessD, TSuccessE, TSuccessF>(Result<(TSuccessA, TSuccessB, TSuccessC, TSuccessD, TSuccessE)>, Func<Result<TSuccessF>>) Declaration public static Result<(TSuccessA, TSuccessB, TSuccessC, TSuccessD, TSuccessE, TSuccessF)> BindFlat<TSuccessA, TSuccessB, TSuccessC, TSuccessD, TSuccessE, TSuccessF>(this Result<(TSuccessA, TSuccessB, TSuccessC, TSuccessD, TSuccessE)> result, Func<Result<TSuccessF>> f) Parameters Type Name Description Result < System.ValueTuple <TSuccessA, TSuccessB, TSuccessC, TSuccessD, TSuccessE>> result System.Func < Result <TSuccessF>> f Returns Type Description Result < System.ValueTuple <TSuccessA, TSuccessB, TSuccessC, TSuccessD, TSuccessE, TSuccessF>> Type Parameters Name Description TSuccessA TSuccessB TSuccessC TSuccessD TSuccessE TSuccessF | Improve this Doc View Source BindFlat<TS1, TS2, TS3, TS4, TS5, TS6, TS7>(Result<(TS1, TS2, TS3, TS4, TS5, TS6)>, Func<Result<TS7>>) Declaration public static Result<(TS1, TS2, TS3, TS4, TS5, TS6, TS7)> BindFlat<TS1, TS2, TS3, TS4, TS5, TS6, TS7>(this Result<(TS1, TS2, TS3, TS4, TS5, TS6)> result, Func<Result<TS7>> f) Parameters Type Name Description Result < System.ValueTuple <TS1, TS2, TS3, TS4, TS5, TS6>> result System.Func < Result <TS7>> f Returns Type Description Result < System.ValueTuple <TS1, TS2, TS3, TS4, TS5, TS6, TS7>> Type Parameters Name Description TS1 TS2 TS3 TS4 TS5 TS6 TS7 | Improve this Doc View Source BindFlat<TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8>(Result<(TS1, TS2, TS3, TS4, TS5, TS6, TS7)>, Func<Result<TS8>>) Declaration public static Result<(TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8)> BindFlat<TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8>(this Result<(TS1, TS2, TS3, TS4, TS5, TS6, TS7)> result, Func<Result<TS8>> f) Parameters Type Name Description Result < System.ValueTuple <TS1, TS2, TS3, TS4, TS5, TS6, TS7>> result System.Func < Result <TS8>> f Returns Type Description Result < System.ValueTuple <TS1, TS2, TS3, TS4, TS5, TS6, TS7, System.ValueTuple <TS8>>> Type Parameters Name Description TS1 TS2 TS3 TS4 TS5 TS6 TS7 TS8 | Improve this Doc View Source BindFlat<TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9>(Result<(TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8)>, Func<Result<TS9>>) Declaration public static Result<(TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9)> BindFlat<TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9>(this Result<(TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8)> result, Func<Result<TS9>> f) Parameters Type Name Description Result < System.ValueTuple <TS1, TS2, TS3, TS4, TS5, TS6, TS7, System.ValueTuple <TS8>>> result System.Func < Result <TS9>> f Returns Type Description Result < System.ValueTuple <TS1, TS2, TS3, TS4, TS5, TS6, TS7, System.ValueTuple <TS8, TS9>>> Type Parameters Name Description TS1 TS2 TS3 TS4 TS5 TS6 TS7 TS8 TS9 | Improve this Doc View Source Filter<TSuccessA, TError>(Result<TSuccessA, TError>, Predicate<TSuccessA>, TError) Declaration public static Result<TSuccessA, TError> Filter<TSuccessA, TError>(this Result<TSuccessA, TError> result, Predicate<TSuccessA> filter, TError defaultError) Parameters Type Name Description Result <TSuccessA, TError> result System.Predicate <TSuccessA> filter TError defaultError Returns Type Description Result <TSuccessA, TError> Type Parameters Name Description TSuccessA TError | Improve this Doc View Source FilterError<TSuccessA, TError>(Result<TSuccessA, TError>, Predicate<TError>, TSuccessA) Declaration public static Result<TSuccessA, TError> FilterError<TSuccessA, TError>(this Result<TSuccessA, TError> result, Predicate<TError> filter, TSuccessA defaultError) Parameters Type Name Description Result <TSuccessA, TError> result System.Predicate <TError> filter TSuccessA defaultError Returns Type Description Result <TSuccessA, TError> Type Parameters Name Description TSuccessA TError | Improve this Doc View Source Iter<TSuccess>(Result<TSuccess>, Action<TSuccess>) Declaration public static Result<TSuccess> Iter<TSuccess>(this Result<TSuccess> result, Action<TSuccess> action) Parameters Type Name Description Result <TSuccess> result System.Action <TSuccess> action Returns Type Description Result <TSuccess> Type Parameters Name Description TSuccess | Improve this Doc View Source IterAsync<TSuccess>(Result<TSuccess>, Func<TSuccess, ValueTask>) Declaration public static async ValueTask<Result<TSuccess>> IterAsync<TSuccess>(this Result<TSuccess> result, Func<TSuccess, ValueTask> actionAsync) Parameters Type Name Description Result <TSuccess> result System.Func <TSuccess, System.Threading.Tasks.ValueTask > actionAsync Returns Type Description System.Threading.Tasks.ValueTask < Result <TSuccess>> Type Parameters Name Description TSuccess | Improve this Doc View Source Map<TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10, TS11>(Result<(TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10)>, Func<TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10, TS11>) Declaration public static Result<TS11> Map<TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10, TS11>(this Result<(TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10)> result, Func<TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10, TS11> f) Parameters Type Name Description Result < System.ValueTuple <TS1, TS2, TS3, TS4, TS5, TS6, TS7, System.ValueTuple <TS8, TS9, TS10>>> result System.Func <TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10, TS11> f Returns Type Description Result <TS11> Type Parameters Name Description TS1 TS2 TS3 TS4 TS5 TS6 TS7 TS8 TS9 TS10 TS11 | Improve this Doc View Source Map<TSuccessA, TSuccessB>(Result<TSuccessA>, Func<TSuccessA, TSuccessB>) Result<TSuccess> functor. Declaration public static Result<TSuccessB> Map<TSuccessA, TSuccessB>(this Result<TSuccessA> result, Func<TSuccessA, TSuccessB> f) Parameters Type Name Description Result <TSuccessA> result System.Func <TSuccessA, TSuccessB> f Returns Type Description Result <TSuccessB> Type Parameters Name Description TSuccessA TSuccessB | Improve this Doc View Source Map<TSuccessA, TSuccessB, __>(Result<TSuccessA, __>, Func<TSuccessA, TSuccessB>) Result<TSuccess, TFailure> functor. Declaration public static Result<TSuccessB, __> Map<TSuccessA, TSuccessB, __>(this Result<TSuccessA, __> result, Func<TSuccessA, TSuccessB> f) Parameters Type Name Description Result <TSuccessA, __> result System.Func <TSuccessA, TSuccessB> f Returns Type Description Result <TSuccessB, __> Type Parameters Name Description TSuccessA TSuccessB __ | Improve this Doc View Source Map<TS1, TS2, TS3, TS4>(Result<(TS1, TS2, TS3)>, Func<TS1, TS2, TS3, TS4>) Declaration public static Result<TS4> Map<TS1, TS2, TS3, TS4>(this Result<(TS1, TS2, TS3)> result, Func<TS1, TS2, TS3, TS4> f) Parameters Type Name Description Result < System.ValueTuple <TS1, TS2, TS3>> result System.Func <TS1, TS2, TS3, TS4> f Returns Type Description Result <TS4> Type Parameters Name Description TS1 TS2 TS3 TS4 | Improve this Doc View Source Map<TS1, TS2, TS3, TS4, TS5>(Result<(TS1, TS2, TS3, TS4)>, Func<TS1, TS2, TS3, TS4, TS5>) Declaration public static Result<TS5> Map<TS1, TS2, TS3, TS4, TS5>(this Result<(TS1, TS2, TS3, TS4)> result, Func<TS1, TS2, TS3, TS4, TS5> f) Parameters Type Name Description Result < System.ValueTuple <TS1, TS2, TS3, TS4>> result System.Func <TS1, TS2, TS3, TS4, TS5> f Returns Type Description Result <TS5> Type Parameters Name Description TS1 TS2 TS3 TS4 TS5 | Improve this Doc View Source MapError<_, TErrorA, TErrorB>(Result<_, TErrorA>, Func<TErrorA, TErrorB>) Result<TSuccess, TFailure> error functor. Declaration public static Result<_, TErrorB> MapError<_, TErrorA, TErrorB>(this Result<_, TErrorA> result, Func<TErrorA, TErrorB> f) Parameters Type Name Description Result <_, TErrorA> result System.Func <TErrorA, TErrorB> f Returns Type Description Result <_, TErrorB> Type Parameters Name Description _ TErrorA TErrorB | Improve this Doc View Source MapFlat<TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10, TS11>(Result<(TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10)>, Func<TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10, Result<TS11>>) Declaration public static Result<TS11> MapFlat<TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10, TS11>(this Result<(TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10)> result, Func<TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10, Result<TS11>> f) Parameters Type Name Description Result < System.ValueTuple <TS1, TS2, TS3, TS4, TS5, TS6, TS7, System.ValueTuple <TS8, TS9, TS10>>> result System.Func <TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10, Result <TS11>> f Returns Type Description Result <TS11> Type Parameters Name Description TS1 TS2 TS3 TS4 TS5 TS6 TS7 TS8 TS9 TS10 TS11 | Improve this Doc View Source MapTask<TSuccessA>(Result<TSuccessA>, Func<TSuccessA, Task<Result>>) Declaration public static Task<Result> MapTask<TSuccessA>(this Result<TSuccessA> result, Func<TSuccessA, Task<Result>> f) Parameters Type Name Description Result <TSuccessA> result System.Func <TSuccessA, System.Threading.Tasks.Task < Result >> f Returns Type Description System.Threading.Tasks.Task < Result > Type Parameters Name Description TSuccessA | Improve this Doc View Source MapTask<TSuccessA, TSuccessB>(Result<TSuccessA>, Func<TSuccessA, Task<Result<TSuccessB>>>) Declaration public static Task<Result<TSuccessB>> MapTask<TSuccessA, TSuccessB>(this Result<TSuccessA> result, Func<TSuccessA, Task<Result<TSuccessB>>> f) Parameters Type Name Description Result <TSuccessA> result System.Func <TSuccessA, System.Threading.Tasks.Task < Result <TSuccessB>>> f Returns Type Description System.Threading.Tasks.Task < Result <TSuccessB>> Type Parameters Name Description TSuccessA TSuccessB | Improve this Doc View Source SequenceTask<TSuccess>(Result<Task<TSuccess>>) Declaration public static async Task<Result<TSuccess>> SequenceTask<TSuccess>(this Result<Task<TSuccess>> result) Parameters Type Name Description Result < System.Threading.Tasks.Task <TSuccess>> result Returns Type Description System.Threading.Tasks.Task < Result <TSuccess>> Type Parameters Name Description TSuccess | Improve this Doc View Source SequenceTask<TSuccess>(Result<ValueTask<TSuccess>>) Declaration public static async ValueTask<Result<TSuccess>> SequenceTask<TSuccess>(this Result<ValueTask<TSuccess>> result) Parameters Type Name Description Result < System.Threading.Tasks.ValueTask <TSuccess>> result Returns Type Description System.Threading.Tasks.ValueTask < Result <TSuccess>> Type Parameters Name Description TSuccess | Improve this Doc View Source ToFiledResult(Int32) Declaration public static Result<(), int> ToFiledResult(this int result) Parameters Type Name Description System.Int32 result Returns Type Description Result < System.ValueTuple , System.Int32 > | Improve this Doc View Source ToResult(Int32, Predicate<Int32>) Declaration public static Result<(), int> ToResult(this int result, Predicate<int> isSuccessful) Parameters Type Name Description System.Int32 result System.Predicate < System.Int32 > isSuccessful Returns Type Description Result < System.ValueTuple , System.Int32 > | Improve this Doc View Source ToResult<TSuccess>(TSuccess) Declaration public static Result<TSuccess> ToResult<TSuccess>(this TSuccess success) Parameters Type Name Description TSuccess success Returns Type Description Result <TSuccess> Type Parameters Name Description TSuccess | Improve this Doc View Source ToSuccessResult(Int32) Declaration public static Result<(), int> ToSuccessResult(this int result) Parameters Type Name Description System.Int32 result Returns Type Description Result < System.ValueTuple , System.Int32 > | Improve this Doc View Source TraverseM<TSuccessA, TSuccessB>(ICollection<TSuccessA>, Func<TSuccessA, Result<TSuccessB>>) Declaration public static Result<ICollection<TSuccessB>> TraverseM<TSuccessA, TSuccessB>(this ICollection<TSuccessA> elems, Func<TSuccessA, Result<TSuccessB>> f) Parameters Type Name Description System.Collections.Generic.ICollection <TSuccessA> elems System.Func <TSuccessA, Result <TSuccessB>> f Returns Type Description Result < System.Collections.Generic.ICollection <TSuccessB>> Type Parameters Name Description TSuccessA TSuccessB | Improve this Doc View Source TraverseTask<_, __>(Result<_, __>) Result<TSuccess, TFailure> traverse. Declaration public static Task<Result<_, __>> TraverseTask<_, __>(this Result<_, __> result) Parameters Type Name Description Result <_, __> result Returns Type Description System.Threading.Tasks.Task < Result <_, __>> Type Parameters Name Description _ __ | Improve this Doc View Source TraverseTask<TSuccessA, TSuccessB, __>(Result<TSuccessA, __>, Func<TSuccessA, Task<TSuccessB>>) Result<TSuccess, TFailure> traverse. Declaration public static Task<Result<TSuccessB, __>> TraverseTask<TSuccessA, TSuccessB, __>(this Result<TSuccessA, __> result, Func<TSuccessA, Task<TSuccessB>> f) Parameters Type Name Description Result <TSuccessA, __> result System.Func <TSuccessA, System.Threading.Tasks.Task <TSuccessB>> f Returns Type Description System.Threading.Tasks.Task < Result <TSuccessB, __>> Type Parameters Name Description TSuccessA TSuccessB __"
  },
  "api/p1eXu5.Result.Extensions.TaskExtensions.html": {
    "href": "api/p1eXu5.Result.Extensions.TaskExtensions.html",
    "title": "Class TaskExtensions | DocFX Material",
    "keywords": "Class TaskExtensions Inheritance System.Object TaskExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : p1eXu5.Result.Extensions Assembly : p1eXu5.Result.dll Syntax public static class TaskExtensions Methods | Improve this Doc View Source TaskApply<TContextA, TContextB>(Task<TContextA>, Task<Func<TContextA, TContextB>>) Declaration public static async Task<TContextB> TaskApply<TContextA, TContextB>(this Task<TContextA> task, Task<Func<TContextA, TContextB>> f) Parameters Type Name Description System.Threading.Tasks.Task <TContextA> task System.Threading.Tasks.Task < System.Func <TContextA, TContextB>> f Returns Type Description System.Threading.Tasks.Task <TContextB> Type Parameters Name Description TContextA TContextB | Improve this Doc View Source TaskMap<TContextA, TContextB>(Task<TContextA>, Func<TContextA, TContextB>) Declaration public static async Task<TContextB> TaskMap<TContextA, TContextB>(this Task<TContextA> task, Func<TContextA, TContextB> f) Parameters Type Name Description System.Threading.Tasks.Task <TContextA> task System.Func <TContextA, TContextB> f Returns Type Description System.Threading.Tasks.Task <TContextB> Type Parameters Name Description TContextA TContextB | Improve this Doc View Source ToTaskResult(Task, CancellationToken) Declaration public static async Task<Result> ToTaskResult(this Task task, CancellationToken cancellationToken) Parameters Type Name Description System.Threading.Tasks.Task task System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < Result > | Improve this Doc View Source ToTaskResult<TContext>(Task<TContext>, CancellationToken) Declaration public static async Task<Result<TContext>> ToTaskResult<TContext>(this Task<TContext> task, CancellationToken cancellationToken) Parameters Type Name Description System.Threading.Tasks.Task <TContext> task System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < Result <TContext>> Type Parameters Name Description TContext"
  },
  "api/p1eXu5.Result.Extensions.TaskResultExtensions.html": {
    "href": "api/p1eXu5.Result.Extensions.TaskResultExtensions.html",
    "title": "Class TaskResultExtensions | DocFX Material",
    "keywords": "Class TaskResultExtensions TaskResult extensions. Inheritance System.Object TaskResultExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : p1eXu5.Result.Extensions Assembly : p1eXu5.Result.dll Syntax public static class TaskResultExtensions Methods | Improve this Doc View Source Apply<TSuccessA, TSuccessB, __>(Task<Result<TSuccessA, __>>, Task<Result<Func<TSuccessA, TSuccessB>, __>>) TaskResult applicative functor. Declaration public static async Task<Result<TSuccessB, __>> Apply<TSuccessA, TSuccessB, __>(this Task<Result<TSuccessA, __>> task, Task<Result<Func<TSuccessA, TSuccessB>, __>> f) Parameters Type Name Description System.Threading.Tasks.Task < Result <TSuccessA, __>> task System.Threading.Tasks.Task < Result < System.Func <TSuccessA, TSuccessB>, __>> f Returns Type Description System.Threading.Tasks.Task < Result <TSuccessB, __>> Type Parameters Name Description TSuccessA TSuccessB __ | Improve this Doc View Source Bibind<TSuccessA, TSuccessB, TErrorA, TErrorB>(Task<Result<TSuccessA, TErrorA>>, Func<TSuccessA, Task<Result<TSuccessB, TErrorB>>>, Func<TErrorA, Task<Result<TSuccessB, TErrorB>>>) Declaration public static async Task<Result<TSuccessB, TErrorB>> Bibind<TSuccessA, TSuccessB, TErrorA, TErrorB>(this Task<Result<TSuccessA, TErrorA>> task, Func<TSuccessA, Task<Result<TSuccessB, TErrorB>>> fs, Func<TErrorA, Task<Result<TSuccessB, TErrorB>>> fe) Parameters Type Name Description System.Threading.Tasks.Task < Result <TSuccessA, TErrorA>> task System.Func <TSuccessA, System.Threading.Tasks.Task < Result <TSuccessB, TErrorB>>> fs System.Func <TErrorA, System.Threading.Tasks.Task < Result <TSuccessB, TErrorB>>> fe Returns Type Description System.Threading.Tasks.Task < Result <TSuccessB, TErrorB>> Type Parameters Name Description TSuccessA TSuccessB TErrorA TErrorB | Improve this Doc View Source Bimap<TSuccessA, TSuccessB, TErrorA, TErrorB>(Task<Result<TSuccessA, TErrorA>>, Func<TSuccessA, TSuccessB>, Func<TErrorA, TErrorB>) Declaration public static async Task<Result<TSuccessB, TErrorB>> Bimap<TSuccessA, TSuccessB, TErrorA, TErrorB>(this Task<Result<TSuccessA, TErrorA>> task, Func<TSuccessA, TSuccessB> fs, Func<TErrorA, TErrorB> fe) Parameters Type Name Description System.Threading.Tasks.Task < Result <TSuccessA, TErrorA>> task System.Func <TSuccessA, TSuccessB> fs System.Func <TErrorA, TErrorB> fe Returns Type Description System.Threading.Tasks.Task < Result <TSuccessB, TErrorB>> Type Parameters Name Description TSuccessA TSuccessB TErrorA TErrorB | Improve this Doc View Source Bind(Task<Result>, Func<Task<Result>>) Declaration public static async Task<Result> Bind(this Task<Result> task, Func<Task<Result>> f) Parameters Type Name Description System.Threading.Tasks.Task < Result > task System.Func < System.Threading.Tasks.Task < Result >> f Returns Type Description System.Threading.Tasks.Task < Result > | Improve this Doc View Source Bind<TSuccessA>(Task<Result<TSuccessA, String>>, Func<TSuccessA, Task<Result>>) Declaration public static async Task<Result> Bind<TSuccessA>(this Task<Result<TSuccessA, string>> task, Func<TSuccessA, Task<Result>> f) Parameters Type Name Description System.Threading.Tasks.Task < Result <TSuccessA, System.String >> task System.Func <TSuccessA, System.Threading.Tasks.Task < Result >> f Returns Type Description System.Threading.Tasks.Task < Result > Type Parameters Name Description TSuccessA | Improve this Doc View Source Bind<TSuccessA>(Task<Result<TSuccessA>>, Func<TSuccessA, Task<Result>>) Declaration public static async Task<Result> Bind<TSuccessA>(this Task<Result<TSuccessA>> taskResult, Func<TSuccessA, Task<Result>> f) Parameters Type Name Description System.Threading.Tasks.Task < Result <TSuccessA>> taskResult System.Func <TSuccessA, System.Threading.Tasks.Task < Result >> f Returns Type Description System.Threading.Tasks.Task < Result > Type Parameters Name Description TSuccessA | Improve this Doc View Source Bind<TSuccessA, TSuccessB>(Task<Result<TSuccessA>>, Func<TSuccessA, Task<Result<TSuccessB>>>) Declaration public static async Task<Result<TSuccessB>> Bind<TSuccessA, TSuccessB>(this Task<Result<TSuccessA>> task, Func<TSuccessA, Task<Result<TSuccessB>>> f) Parameters Type Name Description System.Threading.Tasks.Task < Result <TSuccessA>> task System.Func <TSuccessA, System.Threading.Tasks.Task < Result <TSuccessB>>> f Returns Type Description System.Threading.Tasks.Task < Result <TSuccessB>> Type Parameters Name Description TSuccessA TSuccessB | Improve this Doc View Source Bind<TSuccessA, TSuccessB>(Task<Result<TSuccessA>>, Func<TSuccessA, ValueTask<TSuccessB>>) Declaration public static async Task<Result<TSuccessB>> Bind<TSuccessA, TSuccessB>(this Task<Result<TSuccessA>> taskResult, Func<TSuccessA, ValueTask<TSuccessB>> f) Parameters Type Name Description System.Threading.Tasks.Task < Result <TSuccessA>> taskResult System.Func <TSuccessA, System.Threading.Tasks.ValueTask <TSuccessB>> f Returns Type Description System.Threading.Tasks.Task < Result <TSuccessB>> Type Parameters Name Description TSuccessA TSuccessB | Improve this Doc View Source Bind<TSuccessA, TSuccessB, __>(Task<Result<TSuccessA, __>>, Func<TSuccessA, Task<Result<TSuccessB, __>>>) TaskResult monad. Declaration public static async Task<Result<TSuccessB, __>> Bind<TSuccessA, TSuccessB, __>(this Task<Result<TSuccessA, __>> task, Func<TSuccessA, Task<Result<TSuccessB, __>>> f) Parameters Type Name Description System.Threading.Tasks.Task < Result <TSuccessA, __>> task System.Func <TSuccessA, System.Threading.Tasks.Task < Result <TSuccessB, __>>> f Returns Type Description System.Threading.Tasks.Task < Result <TSuccessB, __>> Type Parameters Name Description TSuccessA TSuccessB __ | Improve this Doc View Source Bind<TSuccessA, TSuccessB, TErrorA, TErrorB>(Task<Result<TSuccessA, TErrorA>>, Func<TSuccessA, Task<Result<TSuccessB, TErrorB>>>, Func<TErrorA, TErrorB>) Declaration public static async Task<Result<TSuccessB, TErrorB>> Bind<TSuccessA, TSuccessB, TErrorA, TErrorB>(this Task<Result<TSuccessA, TErrorA>> task, Func<TSuccessA, Task<Result<TSuccessB, TErrorB>>> f, Func<TErrorA, TErrorB> fe) Parameters Type Name Description System.Threading.Tasks.Task < Result <TSuccessA, TErrorA>> task System.Func <TSuccessA, System.Threading.Tasks.Task < Result <TSuccessB, TErrorB>>> f System.Func <TErrorA, TErrorB> fe Returns Type Description System.Threading.Tasks.Task < Result <TSuccessB, TErrorB>> Type Parameters Name Description TSuccessA TSuccessB TErrorA TErrorB | Improve this Doc View Source BindError<_, TErrorA, TErrorB>(Task<Result<_, TErrorA>>, Func<TErrorA, Task<Result<_, TErrorB>>>) Declaration public static async Task<Result<_, TErrorB>> BindError<_, TErrorA, TErrorB>(this Task<Result<_, TErrorA>> task, Func<TErrorA, Task<Result<_, TErrorB>>> f) Parameters Type Name Description System.Threading.Tasks.Task < Result <_, TErrorA>> task System.Func <TErrorA, System.Threading.Tasks.Task < Result <_, TErrorB>>> f Returns Type Description System.Threading.Tasks.Task < Result <_, TErrorB>> Type Parameters Name Description _ TErrorA TErrorB | Improve this Doc View Source BindV<TSuccessA, TSuccessB>(ValueTask<Result<TSuccessA>>, Func<TSuccessA, Task<Result<TSuccessB>>>) Declaration public static async ValueTask<Result<TSuccessB>> BindV<TSuccessA, TSuccessB>(this ValueTask<Result<TSuccessA>> taskResult, Func<TSuccessA, Task<Result<TSuccessB>>> f) Parameters Type Name Description System.Threading.Tasks.ValueTask < Result <TSuccessA>> taskResult System.Func <TSuccessA, System.Threading.Tasks.Task < Result <TSuccessB>>> f Returns Type Description System.Threading.Tasks.ValueTask < Result <TSuccessB>> Type Parameters Name Description TSuccessA TSuccessB | Improve this Doc View Source BindV<TSuccessA, TSuccessB>(ValueTask<Result<TSuccessA>>, Func<TSuccessA, ValueTask<Result<TSuccessB>>>) Declaration public static async Task<Result<TSuccessB>> BindV<TSuccessA, TSuccessB>(this ValueTask<Result<TSuccessA>> taskResult, Func<TSuccessA, ValueTask<Result<TSuccessB>>> f) Parameters Type Name Description System.Threading.Tasks.ValueTask < Result <TSuccessA>> taskResult System.Func <TSuccessA, System.Threading.Tasks.ValueTask < Result <TSuccessB>>> f Returns Type Description System.Threading.Tasks.Task < Result <TSuccessB>> Type Parameters Name Description TSuccessA TSuccessB | Improve this Doc View Source Filter<TSuccessA, TError>(Task<Result<TSuccessA, TError>>, Predicate<TSuccessA>, TError) Declaration public static async Task<Result<TSuccessA, TError>> Filter<TSuccessA, TError>(this Task<Result<TSuccessA, TError>> task, Predicate<TSuccessA> filter, TError defaultError) Parameters Type Name Description System.Threading.Tasks.Task < Result <TSuccessA, TError>> task System.Predicate <TSuccessA> filter TError defaultError Returns Type Description System.Threading.Tasks.Task < Result <TSuccessA, TError>> Type Parameters Name Description TSuccessA TError | Improve this Doc View Source FilterError<TSuccessA, TError>(Task<Result<TSuccessA, TError>>, Predicate<TError>, TSuccessA) Declaration public static async Task<Result<TSuccessA, TError>> FilterError<TSuccessA, TError>(this Task<Result<TSuccessA, TError>> task, Predicate<TError> filter, TSuccessA defaultError) Parameters Type Name Description System.Threading.Tasks.Task < Result <TSuccessA, TError>> task System.Predicate <TError> filter TSuccessA defaultError Returns Type Description System.Threading.Tasks.Task < Result <TSuccessA, TError>> Type Parameters Name Description TSuccessA TError | Improve this Doc View Source Map<TSuccessA, TSuccessB, __>(Task<Result<TSuccessA, __>>, Func<TSuccessA, TSuccessB>) Declaration public static async Task<Result<TSuccessB, __>> Map<TSuccessA, TSuccessB, __>(this Task<Result<TSuccessA, __>> task, Func<TSuccessA, TSuccessB> f) Parameters Type Name Description System.Threading.Tasks.Task < Result <TSuccessA, __>> task System.Func <TSuccessA, TSuccessB> f Returns Type Description System.Threading.Tasks.Task < Result <TSuccessB, __>> Type Parameters Name Description TSuccessA TSuccessB __ | Improve this Doc View Source MapError<_, TErrorA, TErrorB>(Task<Result<_, TErrorA>>, Func<TErrorA, TErrorB>) Declaration public static async Task<Result<_, TErrorB>> MapError<_, TErrorA, TErrorB>(this Task<Result<_, TErrorA>> task, Func<TErrorA, TErrorB> f) Parameters Type Name Description System.Threading.Tasks.Task < Result <_, TErrorA>> task System.Func <TErrorA, TErrorB> f Returns Type Description System.Threading.Tasks.Task < Result <_, TErrorB>> Type Parameters Name Description _ TErrorA TErrorB | Improve this Doc View Source MapFlat<TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10, TS11>(Task<Result<(TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10)>>, Func<TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10, Result<TS11>>) Declaration public static async Task<Result<TS11>> MapFlat<TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10, TS11>(this Task<Result<(TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10)>> result, Func<TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10, Result<TS11>> f) Parameters Type Name Description System.Threading.Tasks.Task < Result < System.ValueTuple <TS1, TS2, TS3, TS4, TS5, TS6, TS7, System.ValueTuple <TS8, TS9, TS10>>>> result System.Func <TS1, TS2, TS3, TS4, TS5, TS6, TS7, TS8, TS9, TS10, Result <TS11>> f Returns Type Description System.Threading.Tasks.Task < Result <TS11>> Type Parameters Name Description TS1 TS2 TS3 TS4 TS5 TS6 TS7 TS8 TS9 TS10 TS11 | Improve this Doc View Source MapToResult<TSuccessA, TSuccessB>(Task<Result<TSuccessA>>, Func<TSuccessA, Result<TSuccessB>>) Declaration public static async Task<Result<TSuccessB>> MapToResult<TSuccessA, TSuccessB>(this Task<Result<TSuccessA>> taskResult, Func<TSuccessA, Result<TSuccessB>> f) Parameters Type Name Description System.Threading.Tasks.Task < Result <TSuccessA>> taskResult System.Func <TSuccessA, Result <TSuccessB>> f Returns Type Description System.Threading.Tasks.Task < Result <TSuccessB>> Type Parameters Name Description TSuccessA TSuccessB | Improve this Doc View Source MapToResult<TSuccessA, TSuccessB>(ValueTask<Result<TSuccessA>>, Func<TSuccessA, Result<TSuccessB>>) Declaration public static async Task<Result<TSuccessB>> MapToResult<TSuccessA, TSuccessB>(this ValueTask<Result<TSuccessA>> taskResult, Func<TSuccessA, Result<TSuccessB>> f) Parameters Type Name Description System.Threading.Tasks.ValueTask < Result <TSuccessA>> taskResult System.Func <TSuccessA, Result <TSuccessB>> f Returns Type Description System.Threading.Tasks.Task < Result <TSuccessB>> Type Parameters Name Description TSuccessA TSuccessB | Improve this Doc View Source Retn<_>(_) Retn for TaskResult. Declaration public static Task<Result<_, ()>> Retn<_>(this _ succeededContext) Parameters Type Name Description _ succeededContext Returns Type Description System.Threading.Tasks.Task < Result <_, System.ValueTuple >> Type Parameters Name Description _ | Improve this Doc View Source Retn<TSuccess>(Result<TSuccess>) Retn for TaskResult. Declaration public static Task<Result<TSuccess>> Retn<TSuccess>(this Result<TSuccess> result) Parameters Type Name Description Result <TSuccess> result Returns Type Description System.Threading.Tasks.Task < Result <TSuccess>> Type Parameters Name Description TSuccess | Improve this Doc View Source Retn<TSuccess, TError>(Result<TSuccess, TError>) Retn for TaskResult. Declaration public static Task<Result<TSuccess, TError>> Retn<TSuccess, TError>(this Result<TSuccess, TError> result) Parameters Type Name Description Result <TSuccess, TError> result Returns Type Description System.Threading.Tasks.Task < Result <TSuccess, TError>> Type Parameters Name Description TSuccess TError"
  },
  "api/p1eXu5.Result.Generic.html": {
    "href": "api/p1eXu5.Result.Generic.html",
    "title": "Namespace p1eXu5.Result.Generic | DocFX Material",
    "keywords": "Namespace p1eXu5.Result.Generic Classes Result<TSuccess> Result class with a generic succeeded context and string error context. Result<TSuccess, TFailure> Result class with generic succeeded and failed contexts."
  },
  "api/p1eXu5.Result.Generic.Result-1.html": {
    "href": "api/p1eXu5.Result.Generic.Result-1.html",
    "title": "Class Result<TSuccess> | DocFX Material",
    "keywords": "Class Result<TSuccess> Result class with a generic succeeded context and string error context. Inheritance System.Object Result<TSuccess> Result Implements IResult <TSuccess, System.String > Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : p1eXu5.Result.Generic Assembly : p1eXu5.Result.dll Syntax public class Result<TSuccess> : IResult<TSuccess, string> Type Parameters Name Description TSuccess Constructors | Improve this Doc View Source Result(Result<TSuccess, String>) Initialize a new instance of the Result<TSuccess> class. Declaration protected Result(Result<TSuccess, string> internalResult) Parameters Type Name Description Result <TSuccess, System.String > internalResult Properties | Improve this Doc View Source Error Error when failed. Declaration public string Error { get; } Property Value Type Description System.String | Improve this Doc View Source Failed Declaration public bool Failed { get; } Property Value Type Description System.Boolean | Improve this Doc View Source FailedContext Declaration public string FailedContext { get; } Property Value Type Description System.String | Improve this Doc View Source InternalResult Result<TSuccess, TFailure> . Declaration public Result<TSuccess, string> InternalResult { get; } Property Value Type Description Result <TSuccess, System.String > | Improve this Doc View Source Succeeded Declaration public bool Succeeded { get; } Property Value Type Description System.Boolean | Improve this Doc View Source SuccessContext Gets succeeded context. If Result<TSuccess, TFailure> failed then throws ResultContextAccessException . Declaration public TSuccess SuccessContext { get; } Property Value Type Description TSuccess Exceptions Type Condition ResultContextAccessException Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source Failure() Creates failed Result<TSuccess> Declaration public static Result<TSuccess> Failure() Returns Type Description Result <TSuccess> | Improve this Doc View Source Failure(IEnumerable<String>) Creates failed Result<TSuccess> Declaration public static Result<TSuccess> Failure(IEnumerable<string> errors) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.String > errors Returns Type Description Result <TSuccess> | Improve this Doc View Source Failure(Exception) Creates failed Result<TSuccess> Declaration public static Result<TSuccess> Failure(Exception ex) Parameters Type Name Description System.Exception ex Returns Type Description Result <TSuccess> | Improve this Doc View Source Failure(String) Creates failed Result<TSuccess> Declaration public static Result<TSuccess> Failure(string error) Parameters Type Name Description System.String error Returns Type Description Result <TSuccess> | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source Success(TSuccess) Creates succeeded Result<TSuccess> Declaration public static Result<TSuccess> Success(TSuccess successContext) Parameters Type Name Description TSuccess successContext Returns Type Description Result <TSuccess> | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() | Improve this Doc View Source TryGetFailedContext(out String) Declaration public bool TryGetFailedContext(out string failedContext) Parameters Type Name Description System.String failedContext Returns Type Description System.Boolean | Improve this Doc View Source TryGetSucceededContext(out TSuccess) Declaration public bool TryGetSucceededContext(out TSuccess succeededContext) Parameters Type Name Description TSuccess succeededContext Returns Type Description System.Boolean Operators | Improve this Doc View Source Implicit(Result<TSuccess> to Result<TSuccess, String>) Declaration public static implicit operator Result<TSuccess, string>(Result<TSuccess> result) Parameters Type Name Description Result <TSuccess> result Returns Type Description Result <TSuccess, System.String > | Improve this Doc View Source Implicit(Result<TSuccess> to Boolean) Implicitly converts Result<TSuccess, TFailure> to System.Boolean . Declaration public static implicit operator bool (Result<TSuccess> result) Parameters Type Name Description Result <TSuccess> result Returns Type Description System.Boolean Implements IResult<TSuccess, TFailure> Extension Methods ResultExtensions.ToResult<TSuccess>(TSuccess) ResultExtensions.Bind<TSuccessA, TSuccessB>(Result<TSuccessA>, Func<TSuccessA, Result<TSuccessB>>) ResultExtensions.BindFlat<TSuccessA, TSuccessB>(Result<TSuccessA>, Func<Result<TSuccessB>>) ResultExtensions.Map<TSuccessA, TSuccessB>(Result<TSuccessA>, Func<TSuccessA, TSuccessB>) ResultExtensions.MapTask<TSuccessA, TSuccessB>(Result<TSuccessA>, Func<TSuccessA, Task<Result<TSuccessB>>>) ResultExtensions.MapTask<TSuccessA>(Result<TSuccessA>, Func<TSuccessA, Task<Result>>) ResultExtensions.Iter<TSuccess>(Result<TSuccess>, Action<TSuccess>) ResultExtensions.IterAsync<TSuccess>(Result<TSuccess>, Func<TSuccess, ValueTask>) TaskResultExtensions.Retn<TSuccess>(Result<TSuccess>) TaskResultExtensions.Retn<TSuccess>(Result<TSuccess>)"
  },
  "api/p1eXu5.Result.Generic.Result-2.html": {
    "href": "api/p1eXu5.Result.Generic.Result-2.html",
    "title": "Class Result<TSuccess, TFailure> | DocFX Material",
    "keywords": "Class Result<TSuccess, TFailure> Result class with generic succeeded and failed contexts. Inheritance System.Object Result<TSuccess, TFailure> Implements IResult <TSuccess, TFailure> Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : p1eXu5.Result.Generic Assembly : p1eXu5.Result.dll Syntax public class Result<TSuccess, TFailure> : IResult<TSuccess, TFailure> Type Parameters Name Description TSuccess TFailure Constructors | Improve this Doc View Source Result(TSuccess) Initializes a new instance of the Result<TSuccess, TFailure> class with succeeded context. Declaration protected Result(TSuccess successContext) Parameters Type Name Description TSuccess successContext | Improve this Doc View Source Result(TFailure) Initializes a new instance of the Result<TSuccess, TFailure> class with failed context. Declaration protected Result(TFailure failureContext) Parameters Type Name Description TFailure failureContext Properties | Improve this Doc View Source Failed Gets a value indicating whether the Result<TSuccess, TFailure> is failed. Declaration public bool Failed { get; } Property Value Type Description System.Boolean | Improve this Doc View Source FailedContext Gets failed context. If Result<TSuccess, TFailure> failed then throws ResultContextAccessException . Declaration public TFailure FailedContext { get; } Property Value Type Description TFailure Exceptions Type Condition ResultContextAccessException | Improve this Doc View Source Succeeded Gets a value indicating whether the Result<TSuccess, TFailure> is succeeded. Declaration public bool Succeeded { get; } Property Value Type Description System.Boolean | Improve this Doc View Source SuccessContext Gets succeeded context. If Result<TSuccess, TFailure> failed then throws ResultContextAccessException . Declaration public TSuccess SuccessContext { get; } Property Value Type Description TSuccess Exceptions Type Condition ResultContextAccessException Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source Failure(TFailure) Creates failed Result<TSuccess, TFailure> Declaration public static Result<TSuccess, TFailure> Failure(TFailure failureContext) Parameters Type Name Description TFailure failureContext Returns Type Description Result <TSuccess, TFailure> | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source Success(TSuccess) Creates succeeded Result<TSuccess, TFailure> Declaration public static Result<TSuccess, TFailure> Success(TSuccess successContext) Parameters Type Name Description TSuccess successContext Returns Type Description Result <TSuccess, TFailure> | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() | Improve this Doc View Source TryGetFailedContext(out TFailure) Gets the failed result context. Declaration public bool TryGetFailedContext(out TFailure failedContext) Parameters Type Name Description TFailure failedContext Returns Type Description System.Boolean | Improve this Doc View Source TryGetSucceededContext(out TSuccess) Gets the succeeded result context. Declaration public bool TryGetSucceededContext(out TSuccess succeededContext) Parameters Type Name Description TSuccess succeededContext Returns Type Description System.Boolean Operators | Improve this Doc View Source Implicit(Result<TSuccess, TFailure> to Boolean) Implicitly converts Result<TSuccess, TFailure> to System.Boolean . Declaration public static implicit operator bool (Result<TSuccess, TFailure> result) Parameters Type Name Description Result <TSuccess, TFailure> result Returns Type Description System.Boolean Implements IResult<TSuccess, TFailure> Extension Methods ResultExtensions.ToResult<TSuccess>(TSuccess) ResultExtensions.Bind<_, __>(Result<_, __>, Func<_, Result<_, __>>) ResultExtensions.Map<TSuccessA, TSuccessB, __>(Result<TSuccessA, __>, Func<TSuccessA, TSuccessB>) ResultExtensions.MapError<_, TErrorA, TErrorB>(Result<_, TErrorA>, Func<TErrorA, TErrorB>) ResultExtensions.Bimap<TSuccessA, TSuccessB, TErrorA, TErrorB>(Result<TSuccessA, TErrorA>, Func<TSuccessA, TSuccessB>, Func<TErrorA, TErrorB>) ResultExtensions.Filter<TSuccessA, TError>(Result<TSuccessA, TError>, Predicate<TSuccessA>, TError) ResultExtensions.FilterError<TSuccessA, TError>(Result<TSuccessA, TError>, Predicate<TError>, TSuccessA) ResultExtensions.TraverseTask<TSuccessA, TSuccessB, __>(Result<TSuccessA, __>, Func<TSuccessA, Task<TSuccessB>>) ResultExtensions.TraverseTask<_, __>(Result<_, __>) TaskResultExtensions.Retn<_>(_) TaskResultExtensions.Retn<TSuccess, TError>(Result<TSuccess, TError>)"
  },
  "api/p1eXu5.Result.html": {
    "href": "api/p1eXu5.Result.html",
    "title": "Namespace p1eXu5.Result | DocFX Material",
    "keywords": "Namespace p1eXu5.Result Classes Result Result<TSuccess> class with System.ValueTuple succeeded context and string[] failed context. Interfaces IResult<TSuccess, TFailure>"
  },
  "api/p1eXu5.Result.IResult-2.html": {
    "href": "api/p1eXu5.Result.IResult-2.html",
    "title": "Interface IResult<TSuccess, TFailure> | DocFX Material",
    "keywords": "Interface IResult<TSuccess, TFailure> Namespace : p1eXu5.Result Assembly : p1eXu5.Result.dll Syntax public interface IResult<TSuccess, TFailure> Type Parameters Name Description TSuccess TFailure Properties | Improve this Doc View Source Failed Gets a value indicating whether the Result<TSuccess, TFailure> is failed. Declaration bool Failed { get; } Property Value Type Description System.Boolean | Improve this Doc View Source FailedContext Gets failed context. If Result<TSuccess, TFailure> failed then throws ResultContextAccessException . Declaration TFailure FailedContext { get; } Property Value Type Description TFailure Exceptions Type Condition ResultContextAccessException | Improve this Doc View Source Succeeded Gets a value indicating whether the Result<TSuccess, TFailure> is succeeded. Declaration bool Succeeded { get; } Property Value Type Description System.Boolean | Improve this Doc View Source SuccessContext Gets succeeded context. If Result<TSuccess, TFailure> failed then throws ResultContextAccessException . Declaration TSuccess SuccessContext { get; } Property Value Type Description TSuccess Exceptions Type Condition ResultContextAccessException Methods | Improve this Doc View Source TryGetFailedContext(out TFailure) Gets the failed result context. Declaration bool TryGetFailedContext(out TFailure failedContext) Parameters Type Name Description TFailure failedContext Returns Type Description System.Boolean | Improve this Doc View Source TryGetSucceededContext(out TSuccess) Gets the succeeded result context. Declaration bool TryGetSucceededContext(out TSuccess succeededContext) Parameters Type Name Description TSuccess succeededContext Returns Type Description System.Boolean Extension Methods ResultExtensions.ToResult<TSuccess>(TSuccess) TaskResultExtensions.Retn<_>(_)"
  },
  "api/p1eXu5.Result.Result.html": {
    "href": "api/p1eXu5.Result.Result.html",
    "title": "Class Result | DocFX Material",
    "keywords": "Class Result Result<TSuccess> class with System.ValueTuple succeeded context and string[] failed context. Inheritance System.Object Result < System.ValueTuple > Result Implements IResult < System.ValueTuple , System.String > Inherited Members Result<()>.Error Result<()>.InternalResult Result<()>.Succeeded Result<()>.Failed Result<()>.SuccessContext Result<()>.FailedContext Result<()>.TryGetSucceededContext(()) Result<()>.TryGetFailedContext(String) Result<()>.Success(()) Result<()>.Equals(Object) Result<()>.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : p1eXu5.Result Assembly : p1eXu5.Result.dll Syntax public class Result : Result<()>, IResult<(), string> Constructors | Improve this Doc View Source Result(Result<(), String>) Initialize a new instance of the Result class. Declaration protected Result(Result<(), string> internalResult) Parameters Type Name Description Result < System.ValueTuple , System.String > internalResult Methods | Improve this Doc View Source Failure() Creates failed Result . Declaration public static Result Failure() Returns Type Description Result | Improve this Doc View Source Failure(IEnumerable<String>) Creates failed Result . Declaration public static Result Failure(IEnumerable<string> errors) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.String > errors Returns Type Description Result | Improve this Doc View Source Failure(Exception) Creates failed Result<TSuccess> Declaration public static Result Failure(Exception ex) Parameters Type Name Description System.Exception ex Returns Type Description Result | Improve this Doc View Source Failure(String) Creates failed Result . Declaration public static Result Failure(string error) Parameters Type Name Description System.String error Returns Type Description Result | Improve this Doc View Source Failure<TSuccess>(String) Creates failed Result . Declaration public static Result<TSuccess> Failure<TSuccess>(string error) Parameters Type Name Description System.String error Returns Type Description Result <TSuccess> Type Parameters Name Description TSuccess | Improve this Doc View Source Success() Creates succeeded Result Declaration public static Result Success() Returns Type Description Result | Improve this Doc View Source Success<TSuccess>(TSuccess) Declaration public static Result<TSuccess> Success<TSuccess>(TSuccess success) Parameters Type Name Description TSuccess success Returns Type Description Result <TSuccess> Type Parameters Name Description TSuccess | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides p1eXu5.Result.Generic.Result<System.ValueTuple>.ToString() Operators | Improve this Doc View Source Explicit(Result<(), String> to Result) Declaration public static explicit operator Result(Result<(), string> result) Parameters Type Name Description Result < System.ValueTuple , System.String > result Returns Type Description Result | Improve this Doc View Source Implicit(Result to Result<(), String>) Declaration public static implicit operator Result<(), string>(Result result) Parameters Type Name Description Result result Returns Type Description Result < System.ValueTuple , System.String > | Improve this Doc View Source Implicit(Result to Boolean) Implicitly converts Result<TSuccess, TFailure> to System.Boolean . Declaration public static implicit operator bool (Result result) Parameters Type Name Description Result result Returns Type Description System.Boolean Implements IResult<TSuccess, TFailure> Extension Methods ResultExtensions.ToResult<TSuccess>(TSuccess) ResultExtensions.Bind<TSuccessA, TSuccessB>(Result<TSuccessA>, Func<TSuccessA, Result<TSuccessB>>) ResultExtensions.BindFlat<TSuccessA, TSuccessB>(Result<TSuccessA>, Func<Result<TSuccessB>>) ResultExtensions.Map<TSuccessA, TSuccessB>(Result<TSuccessA>, Func<TSuccessA, TSuccessB>) ResultExtensions.MapTask<TSuccessA, TSuccessB>(Result<TSuccessA>, Func<TSuccessA, Task<Result<TSuccessB>>>) ResultExtensions.MapTask<TSuccessA>(Result<TSuccessA>, Func<TSuccessA, Task<Result>>) ResultExtensions.Iter<TSuccess>(Result<TSuccess>, Action<TSuccess>) ResultExtensions.IterAsync<TSuccess>(Result<TSuccess>, Func<TSuccess, ValueTask>) TaskResultExtensions.Retn<_>(_) TaskResultExtensions.Retn<TSuccess>(Result<TSuccess>)"
  },
  "index.html": {
    "href": "index.html",
    "title": "Result | DocFX Material",
    "keywords": "Result"
  },
  "README.html": {
    "href": "README.html",
    "title": "Result | DocFX Material",
    "keywords": "Result Package Versions p1eXu5.Result p1eXu5.Result Api Documentation"
  }
}